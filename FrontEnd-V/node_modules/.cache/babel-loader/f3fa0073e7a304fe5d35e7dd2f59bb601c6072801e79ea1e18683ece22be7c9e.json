{"ast":null,"code":"export default {\n  props: {\n    receipt: {\n      type: Object,\n      default: () => ({\n        pK_RECEIPT: null,\n        code: '',\n        datE_PURCHASE: null,\n        datE_REGISTRATION: '',\n        typE_RECEIPT: '',\n        receipT_NUMBER: '',\n        annotations: '',\n        pK_SUPPLIER: null,\n        pK_USER: null,\n        pK_STORE: null\n      }),\n      validator: function (value) {\n        // Validar que datE_PURCHASE sea una fecha válida o null\n        if (value.datE_PURCHASE) {\n          const parts = value.datE_PURCHASE.split('/');\n          if (parts.length === 3) {\n            const day = parseInt(parts[0], 10);\n            const month = parseInt(parts[1], 10) - 1; // Restar 1 al mes\n            const year = parseInt(parts[2], 10);\n            const date = new Date(year, month, day);\n            return !isNaN(date.getTime()); // Retorna true si es una fecha válida\n          }\n          return false; // Formato no válido\n        }\n        return true; // Si es null, es válido\n      }\n    }\n  },\n  data() {\n    return {\n      isOpen: this.modelValue,\n      valid: false,\n      localReceipt: {\n        ...this.receipt\n      },\n      rules: {\n        required: value => !!value || 'Este campo es requerido.'\n      }\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.isOpen = newValue;\n    },\n    isOpen(newValue) {\n      this.$emit('update:modelValue', newValue);\n    },\n    receipt: {\n      handler(newReceipt) {\n        this.localReceipt = {\n          ...newReceipt\n        };\n      },\n      deep: true\n    }\n  },\n  methods: {\n    close() {\n      this.isOpen = false;\n      this.$emit('close');\n    },\n    async saveReceipt() {\n      if (this.$refs.form.validate()) {\n        try {\n          await this.$store.dispatch('goodsreceipt/createReceipt', {\n            ...this.localReceipt\n          });\n          this.$emit('saved', {\n            ...this.localReceipt\n          });\n          this.close();\n        } catch (error) {\n          console.error('Error al guardar la entrada:', error);\n        }\n      }\n    }\n  },\n  mounted() {\n    if (this.localReceipt.pK_RECEIPT == null) {\n      this.localReceipt.datE_PURCHASE = null;\n    } else {\n      // Verifica si datE_PURCHASE tiene un valor válido\n      if (this.localReceipt.datE_PURCHASE) {\n        // Convierte la fecha de dd/mm/yyyy a yyyy-mm-dd\n        const parts = this.localReceipt.datE_PURCHASE.split('/');\n        if (parts.length === 3) {\n          const day = parseInt(parts[0], 10);\n          const month = parseInt(parts[1], 10) - 1; // Restar 1 al mes\n          const year = parseInt(parts[2], 10);\n          const date = new Date(year, month, day); // Crear la fecha correctamente\n\n          if (isNaN(date.getTime())) {\n            console.error('Fecha no válida:', this.localReceipt.datE_PURCHASE);\n          } else {\n            console.log('Fecha válida:', date);\n            this.localReceipt.datE_PURCHASE = date;\n          }\n        } else {\n          console.error('Formato de fecha no válido:', this.localReceipt.datE_PURCHASE);\n        }\n      } else {\n        console.log('datE_PURCHASE es nulo o vacío');\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","receipt","type","Object","default","pK_RECEIPT","code","datE_PURCHASE","datE_REGISTRATION","typE_RECEIPT","receipT_NUMBER","annotations","pK_SUPPLIER","pK_USER","pK_STORE","validator","value","parts","split","length","day","parseInt","month","year","date","Date","isNaN","getTime","data","isOpen","modelValue","valid","localReceipt","rules","required","watch","newValue","$emit","handler","newReceipt","deep","methods","close","saveReceipt","$refs","form","validate","$store","dispatch","error","console","mounted","log"],"sources":["C:\\Users\\Sergio\\Desktop\\SOFINV\\FrontEnd\\src\\components\\GoodsReceipt\\ReceiptForm.vue"],"sourcesContent":["<template>\r\n  <v-card v-if=\"isOpen\">\r\n    <v-card-title class=\"bg-surface-light pt-4\">\r\n      <span>Entradas</span>\r\n    </v-card-title>\r\n    <v-divider></v-divider>\r\n    <v-card-text>\r\n      <v-form ref=\"form\" v-model=\"valid\">\r\n        <v-container>\r\n          <v-row>\r\n            <v-col cols=\"7\" md=\"4\" lg=\"4\" xl=\"4\">\r\n              <v-date-input\r\n                locale=\"es\"\r\n                placeholder=\"dd/mm/yyyy\"\r\n                v-model=\"localReceipt.datE_PURCHASE\"\r\n                label=\"Fecha de Compra\"\r\n              ></v-date-input>\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n                <v-text-field color=\"primary\" variant=\"underlined\" v-model=\"localReceipt.typE_RECEIPT\" label=\"Nombre de la Marca\" required />\r\n              </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-form>\r\n    </v-card-text>\r\n    <v-col xs12 sm12 md12 lg12 xl12>\r\n      <v-card-actions>\r\n        <v-btn color=\"blue\" dark class=\"mb-2\" elevation=\"4\" @click=\"saveReceipt\" :disabled=\"!valid\">Guardar</v-btn>\r\n        <v-btn color=\"red\" dark class=\"mb-2\" elevation=\"4\" @click=\"close\">Cancelar</v-btn>\r\n      </v-card-actions>\r\n    </v-col>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n  receipt: {\r\n    type: Object,\r\n    default: () => ({\r\n      pK_RECEIPT: null,\r\n      code: '',\r\n      datE_PURCHASE: null,\r\n      datE_REGISTRATION: '',\r\n      typE_RECEIPT: '',\r\n      receipT_NUMBER: '',\r\n      annotations: '',\r\n      pK_SUPPLIER: null,\r\n      pK_USER: null,\r\n      pK_STORE: null,\r\n    }),\r\n    validator: function (value) {\r\n      // Validar que datE_PURCHASE sea una fecha válida o null\r\n      if (value.datE_PURCHASE) {\r\n        const parts = value.datE_PURCHASE.split('/');\r\n        if (parts.length === 3) {\r\n          const day = parseInt(parts[0], 10);\r\n          const month = parseInt(parts[1], 10) - 1; // Restar 1 al mes\r\n          const year = parseInt(parts[2], 10);\r\n          const date = new Date(year, month, day);\r\n          return !isNaN(date.getTime()); // Retorna true si es una fecha válida\r\n        }\r\n        return false; // Formato no válido\r\n      }\r\n      return true; // Si es null, es válido\r\n    },\r\n  },\r\n},\r\n  data() {\r\n    return {\r\n      isOpen: this.modelValue,\r\n      valid: false,\r\n      localReceipt: { ...this.receipt },\r\n      rules: {\r\n        required: (value) => !!value || 'Este campo es requerido.',\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    modelValue(newValue) {\r\n      this.isOpen = newValue;\r\n    },\r\n    isOpen(newValue) {\r\n      this.$emit('update:modelValue', newValue);\r\n    },\r\n    receipt: {\r\n      handler(newReceipt) {\r\n        this.localReceipt = { ...newReceipt };\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    close() {\r\n      this.isOpen = false;\r\n      this.$emit('close');\r\n    },\r\n    async saveReceipt() {\r\n      if (this.$refs.form.validate()) {\r\n        try {\r\n          await this.$store.dispatch('goodsreceipt/createReceipt', { ...this.localReceipt });\r\n          this.$emit('saved', { ...this.localReceipt });\r\n          this.close();\r\n        } catch (error) {\r\n          console.error('Error al guardar la entrada:', error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n  if (this.localReceipt.pK_RECEIPT == null) {\r\n    this.localReceipt.datE_PURCHASE = null;\r\n  } else {\r\n    // Verifica si datE_PURCHASE tiene un valor válido\r\n    if (this.localReceipt.datE_PURCHASE) {\r\n      // Convierte la fecha de dd/mm/yyyy a yyyy-mm-dd\r\n      const parts = this.localReceipt.datE_PURCHASE.split('/');\r\n      if (parts.length === 3) {\r\n        const day = parseInt(parts[0], 10);\r\n        const month = parseInt(parts[1], 10) - 1; // Restar 1 al mes\r\n        const year = parseInt(parts[2], 10);\r\n        \r\n        const date = new Date(year, month, day); // Crear la fecha correctamente\r\n        \r\n        if (isNaN(date.getTime())) {\r\n          console.error('Fecha no válida:', this.localReceipt.datE_PURCHASE);\r\n        } else {\r\n          console.log('Fecha válida:', date);\r\n          this.localReceipt.datE_PURCHASE =  date;\r\n        }\r\n      } else {\r\n        console.error('Formato de fecha no válido:', this.localReceipt.datE_PURCHASE);\r\n      }\r\n    } else {\r\n      console.log('datE_PURCHASE es nulo o vacío');\r\n    }\r\n  }\r\n}\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}