{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport { jwtDecode } from 'jwt-decode';\nimport router from '@/router/index';\nimport brand from './modules/brand';\nimport category from './modules/category';\nimport goodsreceipt from './modules/goodsreceipt';\nimport product from './modules/product';\nimport role from './modules/role';\nimport store from './modules/store';\nimport supplier from './modules/supplier';\nimport user from './modules/user';\nimport warehouse from './modules/warehouse';\nconst storeJS = createStore({\n  state: {\n    token: null,\n    currentUser: null\n  },\n  getters: {\n    isAuthenticated(state) {\n      return !!state.token;\n    },\n    getCurrentUser(state) {\n      return state.currentUser;\n    }\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n    },\n    setUser(state, user) {\n      state.currentUser = user;\n    }\n  },\n  actions: {\n    saveToken({\n      commit\n    }, token) {\n      if (isTokenExpired(token)) {\n        commit(\"setToken\", null);\n        commit(\"setUser \", null);\n        localStorage.removeItem(\"token\");\n        router.push({\n          name: \"login\"\n        });\n      } else {\n        commit(\"setToken\", token);\n        commit(\"setUser \", jwtDecode(token));\n        localStorage.setItem(\"token\", token);\n      }\n    },\n    auto({\n      commit\n    }) {\n      let token = localStorage.getItem(\"token\");\n      if (token) {\n        if (isTokenExpired(token)) {\n          commit(\"setToken\", null);\n          commit(\"setUser \", null);\n          localStorage.removeItem(\"token\");\n          router.push({\n            name: \"login\"\n          });\n        } else {\n          commit(\"setToken\", token);\n          commit(\"setUser \", jwtDecode(token));\n          router.push({\n            name: \"dashboard\"\n          });\n        }\n      } else {\n        router.push({\n          name: \"login\"\n        });\n      }\n    },\n    logoff({\n      commit\n    }) {\n      commit(\"setToken\", null);\n      commit(\"setUser\", null);\n      localStorage.removeItem(\"token\");\n      router.push({\n        name: \"login\"\n      });\n    }\n  },\n  modules: {\n    brand,\n    category,\n    goodsreceipt,\n    product,\n    role,\n    store,\n    supplier,\n    user,\n    warehouse\n  }\n});\nfunction isTokenExpired(token) {\n  const decoded = jwtDecode(token);\n  const currentTime = Date.now() / 1000; // Tiempo actual en segundos\n  return decoded.exp < currentTime; // Devuelve true si el token ha expirado\n}\nexport default storeJS;","map":{"version":3,"names":["createStore","jwtDecode","router","brand","category","goodsreceipt","product","role","store","supplier","user","warehouse","storeJS","state","token","currentUser","getters","isAuthenticated","getCurrentUser","mutations","setToken","setUser","actions","saveToken","commit","isTokenExpired","localStorage","removeItem","push","name","setItem","auto","getItem","logoff","modules","decoded","currentTime","Date","now","exp"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport { jwtDecode } from 'jwt-decode';\nimport router from '@/router/index'\nimport brand from './modules/brand';\nimport category from './modules/category';\nimport goodsreceipt from './modules/goodsreceipt';\nimport product from './modules/product';\nimport role from './modules/role';\nimport store from './modules/store';\nimport supplier from './modules/supplier';\nimport user from './modules/user';\nimport warehouse from './modules/warehouse';\n\nconst storeJS = createStore({\n  state: {\n    token: null,\n    currentUser: null,\n  },\n  getters: {\n    isAuthenticated(state) {\n      return !!state.token;\n    },\n    getCurrentUser (state) {\n      return state.currentUser ;\n    }\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token\n    },\n    setUser(state, user) {\n      state.currentUser = user\n    }\n  },\n  actions: {\n    saveToken({ commit }, token) {\n      if (isTokenExpired(token)) {\n        commit(\"setToken\", null);\n        commit(\"setUser \", null);\n        localStorage.removeItem(\"token\");\n        router.push({ name: \"login\" });\n      } else {\n        commit(\"setToken\", token);\n        commit(\"setUser \", jwtDecode(token));\n        localStorage.setItem(\"token\", token);\n      }\n    },\n    auto({ commit }) {\n      let token = localStorage.getItem(\"token\");\n      if (token) {\n        if (isTokenExpired(token)) {\n          commit(\"setToken\", null);\n          commit(\"setUser \", null);\n          localStorage.removeItem(\"token\");\n          router.push({ name: \"login\" });\n        } else {\n          commit(\"setToken\", token);\n          commit(\"setUser \", jwtDecode(token));\n          router.push({ name: \"dashboard\" });\n        }\n      } else {\n        router.push({ name: \"login\" });\n      }\n    },\n    logoff({ commit }) {\n      commit(\"setToken\", null);\n      commit(\"setUser\", null);\n      localStorage.removeItem(\"token\");\n      router.push({ name: \"login\" });\n    },\n  },\n\n  modules: {\n    brand,\n    category,\n    goodsreceipt,\n    product,\n    role,\n    store,\n    supplier,\n    user,\n    warehouse,\n  },\n});\n\nfunction isTokenExpired(token) {\n  const decoded = jwtDecode(token);\n  const currentTime = Date.now() / 1000; // Tiempo actual en segundos\n  return decoded.exp < currentTime; // Devuelve true si el token ha expirado\n}\n\nexport default storeJS;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}