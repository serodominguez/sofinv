{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport decode from 'jwt-decode';\nimport router from '@/router/index';\nimport brand from './modules/brand';\nimport category from './modules/category';\nimport product from './modules/product';\nimport role from './modules/role';\nimport store from './modules/store';\nimport supplier from './modules/supplier';\nimport user from './modules/user';\nconst storeJS = createStore({\n  state: {\n    token: null,\n    currentUser: null\n  },\n  getters: {\n    // Define your root getters here if needed\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n    },\n    setUser(state, user) {\n      state.currentUser = user;\n    }\n  },\n  actions: {\n    saveToken({\n      commit\n    }, token) {\n      commit(\"setToken\", token);\n      commit(\"setUser\", decode(token));\n      localStorage.setItem(\"token\", token);\n    },\n    autoLogin({\n      commit\n    }) {\n      let token = localStorage.getItem(\"token\");\n      if (token) {\n        commit(\"setToken\", token);\n        commit(\"setUser\", decode(token));\n      }\n      router.push({\n        name: \"dashboard\"\n      });\n    },\n    logoff({\n      commit\n    }) {\n      commit(\"setToken\", null);\n      commit(\"setUser\", null);\n      localStorage.removeItem(\"token\");\n      router.push({\n        name: \"login\"\n      });\n    }\n  },\n  modules: {\n    brand,\n    category,\n    product,\n    role,\n    store,\n    supplier,\n    user\n  }\n});\nexport default storeJS;","map":{"version":3,"names":["createStore","decode","router","brand","category","product","role","store","supplier","user","storeJS","state","token","currentUser","getters","mutations","setToken","setUser","actions","saveToken","commit","localStorage","setItem","autoLogin","getItem","push","name","logoff","removeItem","modules"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport decode from 'jwt-decode';\nimport router from '@/router/index'\nimport brand from './modules/brand';\nimport category from './modules/category';\nimport product from './modules/product';\nimport role from './modules/role';\nimport store from './modules/store';\nimport supplier from './modules/supplier';\nimport user from './modules/user';\n\nconst storeJS = createStore({\n  state: {\n    token: null,\n    currentUser: null,\n  },\n  getters: {\n    // Define your root getters here if needed\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token\n    },\n    setUser(state, user) {\n      state.currentUser = user\n    }\n  },\n  actions: {\n    saveToken({ commit }, token) {\n      commit(\"setToken\", token);\n      commit(\"setUser\", decode(token));\n      localStorage.setItem(\"token\", token);\n    },\n    autoLogin({ commit }) {\n      let token = localStorage.getItem(\"token\");\n      if (token) {\n        commit(\"setToken\", token);\n        commit(\"setUser\", decode(token));\n      }\n      router.push({ name: \"dashboard\" });\n    },\n    logoff({ commit }) {\n      commit(\"setToken\", null);\n      commit(\"setUser\", null);\n      localStorage.removeItem(\"token\");\n      router.push({ name: \"login\" });\n    },\n  },\n\n  modules: {\n    brand,\n    category,\n    product,\n    role,\n    store,\n    supplier,\n    user,\n  },\n});\n\nexport default storeJS;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,IAAI,MAAM,gBAAgB;AAEjC,MAAMC,OAAO,GAAGV,WAAW,CAAC;EAC1BW,KAAK,EAAE;IACLC,KAAK,EAAE,IAAI;IACXC,WAAW,EAAE;EACf,CAAC;EACDC,OAAO,EAAE;IACP;EAAA,CACD;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACL,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDK,OAAOA,CAACN,KAAK,EAAEF,IAAI,EAAE;MACnBE,KAAK,CAACE,WAAW,GAAGJ,IAAI;IAC1B;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAER,KAAK,EAAE;MAC3BQ,MAAM,CAAC,UAAU,EAAER,KAAK,CAAC;MACzBQ,MAAM,CAAC,SAAS,EAAEnB,MAAM,CAACW,KAAK,CAAC,CAAC;MAChCS,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,KAAK,CAAC;IACtC,CAAC;IACDW,SAASA,CAAC;MAAEH;IAAO,CAAC,EAAE;MACpB,IAAIR,KAAK,GAAGS,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;MACzC,IAAIZ,KAAK,EAAE;QACTQ,MAAM,CAAC,UAAU,EAAER,KAAK,CAAC;QACzBQ,MAAM,CAAC,SAAS,EAAEnB,MAAM,CAACW,KAAK,CAAC,CAAC;MAClC;MACAV,MAAM,CAACuB,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAC;IACpC,CAAC;IACDC,MAAMA,CAAC;MAAEP;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;MACxBA,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;MACvBC,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChC1B,MAAM,CAACuB,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IAChC;EACF,CAAC;EAEDG,OAAO,EAAE;IACP1B,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC,IAAI;IACJC,KAAK;IACLC,QAAQ;IACRC;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}