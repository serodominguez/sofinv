{"ast":null,"code":"import { useToast } from 'vue-toastification';\nexport default {\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: true\n    },\n    category: {\n      type: Object,\n      default: () => ({\n        pK_CATEGORY: null,\n        categorY_NAME: ''\n      })\n    }\n  },\n  data() {\n    return {\n      isOpen: this.modelValue,\n      valid: false,\n      localCategory: {\n        ...this.category\n      },\n      toast: useToast(),\n      rules: {\n        required: value => !!value || 'Este campo es requerido.'\n      }\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.isOpen = newValue;\n    },\n    isOpen(newValue) {\n      this.$emit('update:modelValue', newValue);\n    },\n    category: {\n      handler(newCategory) {\n        this.localCategory = {\n          ...newCategory\n        };\n      },\n      deep: true\n    }\n  },\n  methods: {\n    uppercase() {\n      this.localCategory.categorY_NAME = this.localCategory.categorY_NAME.toUpperCase();\n    },\n    close() {\n      this.isOpen = false;\n    },\n    async saveCategory() {\n      if (this.$refs.form.validate()) {\n        try {\n          if (this.localCategory.pK_CATEGORY) {\n            await this.$store.dispatch('category/updateCategory', {\n              ...this.localCategory\n            });\n            this.toast.success('Categoría actualizada con éxito!');\n          } else {\n            await this.$store.dispatch('category/createCategory', {\n              ...this.localCategory\n            });\n            this.toast.success('Categoría agregada con éxito!');\n          }\n          this.$emit('saved', {\n            ...this.localCategory\n          });\n          this.close();\n        } catch (error) {\n          if (error.response) {\n            this.toast.error('Error en generar la Categoría.');\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["useToast","props","modelValue","type","Boolean","required","category","Object","default","pK_CATEGORY","categorY_NAME","data","isOpen","valid","localCategory","toast","rules","value","watch","newValue","$emit","handler","newCategory","deep","methods","uppercase","toUpperCase","close","saveCategory","$refs","form","validate","$store","dispatch","success","error","response"],"sources":["C:\\Users\\Sergio\\Desktop\\SOFINV\\FrontEnd-V\\src\\components\\Category\\CategoryForm.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"isOpen\" max-width=\"500px\" persistent>\r\n    <v-card>\r\n      <v-card-title class=\"bg-surface-light pt-4\">\r\n        <span>{{ localCategory.pK_CATEGORY ? 'Editar Categoría' : 'Agregar Categoría' }}</span>\r\n      </v-card-title>\r\n      <v-divider></v-divider>\r\n      <v-card-text>\r\n        <v-form ref=\"form\" v-model=\"valid\">\r\n          <v-container>\r\n            <v-row>\r\n              <v-col cols=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n                <v-text-field color=\"primary\" variant=\"underlined\" v-model=\"localCategory.categorY_NAME\"\r\n                  :rules=\"[rules.required]\" counter=\"40\" :maxlength=\"40\" @keyup=\"uppercase\"\r\n                  label=\"Nombre de la Categoría\" required />\r\n              </v-col>\r\n            </v-row>\r\n          </v-container>\r\n        </v-form>\r\n      </v-card-text>\r\n      <v-col xs12 sm12 md12 lg12 xl12>\r\n        <v-card-actions>\r\n          <v-btn color=\"blue\" dark class=\"mb-2\" elevation=\"4\" @click=\"saveCategory\" :disabled=\"!valid\">Guardar</v-btn>\r\n          <v-btn color=\"red\" dark class=\"mb-2\" elevation=\"4\" @click=\"close\">Cancelar</v-btn>\r\n        </v-card-actions>\r\n      </v-col>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { useToast } from 'vue-toastification';\r\nexport default {\r\n  props: {\r\n    modelValue: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    category: {\r\n      type: Object,\r\n      default: () => ({\r\n        pK_CATEGORY: null,\r\n        categorY_NAME: ''\r\n      }),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: this.modelValue,\r\n      valid: false,\r\n      localCategory: { ...this.category },\r\n      toast: useToast(),\r\n      rules: {\r\n        required: (value) => !!value || 'Este campo es requerido.',\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    modelValue(newValue) {\r\n      this.isOpen = newValue;\r\n    },\r\n    isOpen(newValue) {\r\n      this.$emit('update:modelValue', newValue);\r\n    },\r\n    category: {\r\n      handler(newCategory) {\r\n        this.localCategory = { ...newCategory };\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    uppercase() {\r\n      this.localCategory.categorY_NAME = this.localCategory.categorY_NAME.toUpperCase();\r\n    },\r\n    close() {\r\n      this.isOpen = false;\r\n    },\r\n    async saveCategory() {\r\n      if (this.$refs.form.validate()) {\r\n        try {\r\n          if (this.localCategory.pK_CATEGORY) {\r\n            await this.$store.dispatch('category/updateCategory', { ...this.localCategory });\r\n            this.toast.success('Categoría actualizada con éxito!');\r\n          } else {\r\n            await this.$store.dispatch('category/createCategory', { ...this.localCategory });\r\n            this.toast.success('Categoría agregada con éxito!');\r\n          }\r\n          this.$emit('saved', { ...this.localCategory });\r\n          this.close();\r\n        } catch (error) {\r\n          if (error.response) {\r\n            this.toast.error('Error en generar la Categoría.');\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AA+BA,SAASA,QAAO,QAAS,oBAAoB;AAC7C,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,WAAW,EAAE,IAAI;QACjBC,aAAa,EAAE;MACjB,CAAC;IACH;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI,CAACV,UAAU;MACvBW,KAAK,EAAE,KAAK;MACZC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACR;MAAS,CAAC;MACnCS,KAAK,EAAEf,QAAQ,CAAC,CAAC;MACjBgB,KAAK,EAAE;QACLX,QAAQ,EAAGY,KAAK,IAAK,CAAC,CAACA,KAAI,IAAK;MAClC;IACF,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLhB,UAAUA,CAACiB,QAAQ,EAAE;MACnB,IAAI,CAACP,MAAK,GAAIO,QAAQ;IACxB,CAAC;IACDP,MAAMA,CAACO,QAAQ,EAAE;MACf,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC3C,CAAC;IACDb,QAAQ,EAAE;MACRe,OAAOA,CAACC,WAAW,EAAE;QACnB,IAAI,CAACR,aAAY,GAAI;UAAE,GAAGQ;QAAY,CAAC;MACzC,CAAC;MACDC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACX,aAAa,CAACJ,aAAY,GAAI,IAAI,CAACI,aAAa,CAACJ,aAAa,CAACgB,WAAW,CAAC,CAAC;IACnF,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACf,MAAK,GAAI,KAAK;IACrB,CAAC;IACD,MAAMgB,YAAYA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;QAC9B,IAAI;UACF,IAAI,IAAI,CAACjB,aAAa,CAACL,WAAW,EAAE;YAClC,MAAM,IAAI,CAACuB,MAAM,CAACC,QAAQ,CAAC,yBAAyB,EAAE;cAAE,GAAG,IAAI,CAACnB;YAAc,CAAC,CAAC;YAChF,IAAI,CAACC,KAAK,CAACmB,OAAO,CAAC,kCAAkC,CAAC;UACxD,OAAO;YACL,MAAM,IAAI,CAACF,MAAM,CAACC,QAAQ,CAAC,yBAAyB,EAAE;cAAE,GAAG,IAAI,CAACnB;YAAc,CAAC,CAAC;YAChF,IAAI,CAACC,KAAK,CAACmB,OAAO,CAAC,+BAA+B,CAAC;UACrD;UACA,IAAI,CAACd,KAAK,CAAC,OAAO,EAAE;YAAE,GAAG,IAAI,CAACN;UAAc,CAAC,CAAC;UAC9C,IAAI,CAACa,KAAK,CAAC,CAAC;QACd,EAAE,OAAOQ,KAAK,EAAE;UACd,IAAIA,KAAK,CAACC,QAAQ,EAAE;YAClB,IAAI,CAACrB,KAAK,CAACoB,KAAK,CAAC,gCAAgC,CAAC;UACpD;QACF;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}