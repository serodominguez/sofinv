{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from \"jwt-decode\";\nimport store from \"@/store\";\nconst state = {\n  receipts: [],\n  detailsReceipt: [],\n  selectedReceipt: null,\n  loading: false,\n  error: null\n};\nconst mutations = {\n  SET_RECEIPTS(state, receipts) {\n    state.receipts = receipts;\n  },\n  SET_DETAILS_RECEIPT(state, detailsReceipt) {\n    state.detailsReceipt = detailsReceipt;\n  },\n  SET_SELECTED_RECEIPT(state, receipt) {\n    state.selectedReceipt = receipt;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nconst isExpired = token => {\n  if (!token) return false;\n  const decodedToken = jwtDecode(token);\n  const currentTime = Date.now() / 1000;\n  return decodedToken.exp < currentTime;\n};\nconst actions = {\n  async fetchReceipts({\n    commit,\n    rootState\n  }, id) {\n    commit(\"SET_LOADING\", true);\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get(`api/GoodsReceipt/ReadReceipts/${id}`, configuration);\n      commit(\"SET_RECEIPTS\", response.data);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    } finally {\n      commit(\"SET_LOADING\", false);\n    }\n  },\n  async fetchReceipt({\n    commit,\n    rootState\n  }, {\n    text,\n    id\n  }) {\n    commit(\"SET_LOADING\", true);\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header,\n        params: {\n          text: text,\n          id: id\n        }\n      };\n      const response = await axios.get(\"api/GoodsReceipt/SearchReceipt\", configuration);\n      commit(\"SET_RECEIPTS\", response.data);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    } finally {\n      commit(\"SET_LOADING\", false);\n    }\n  },\n  async fetchDetail({\n    commit,\n    rootState\n  }, id) {\n    commit(\"SET_LOADING\", true);\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get(`api/GoodsReceipt/ReadDetails/${id}`, configuration);\n      commit(\"SET_DETAILS_RECEIPT\", response.data);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    } finally {\n      commit(\"SET_LOADING\", false);\n    }\n  },\n  async createReceipt({\n    commit,\n    dispatch,\n    rootState\n  }, receipt) {\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      await axios.post(\"api/GoodsReceipt/CreateReceipt\", receipt, configuration);\n      dispatch(\"fetchReceipts\", this.$store.state.currentUser.pk_warehouse);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    }\n  },\n  async disabledReceipt({\n    commit,\n    dispatch,\n    rootState\n  }, id) {\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      await axios.put(`api/GoodsReceipt/DisabledReceipt/${id}`, {}, configuration);\n      dispatch(\"fetchReceipts\", this.$store.state.currentUser.pk_warehouse);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    }\n  }\n};\nconst getters = {\n  receipts: state => state.receipts,\n  selectedReceipt: state => state.selectedReceipt,\n  detailsReceipt: state => state.detailsReceipt,\n  loading: state => state.loading,\n  error: state => state.error\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","jwtDecode","store","state","receipts","detailsReceipt","selectedReceipt","loading","error","mutations","SET_RECEIPTS","SET_DETAILS_RECEIPT","SET_SELECTED_RECEIPT","receipt","SET_LOADING","SET_ERROR","isExpired","token","decodedToken","currentTime","Date","now","exp","actions","fetchReceipts","commit","rootState","id","dispatch","header","Authorization","configuration","headers","response","get","data","message","fetchReceipt","text","params","fetchDetail","createReceipt","post","$store","currentUser","pk_warehouse","disabledReceipt","put","getters","namespaced"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/modules/goodsreceipt.js"],"sourcesContent":["import axios from 'axios';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport store from \"@/store\";\r\n\r\nconst state = {\r\n  receipts: [],\r\n  detailsReceipt: [],\r\n  selectedReceipt: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst mutations = {\r\n  SET_RECEIPTS(state, receipts) {\r\n    state.receipts = receipts;\r\n  },\r\n  SET_DETAILS_RECEIPT(state, detailsReceipt) {\r\n    state.detailsReceipt = detailsReceipt;\r\n  },\r\n  SET_SELECTED_RECEIPT(state, receipt) {\r\n    state.selectedReceipt = receipt;\r\n  },\r\n  SET_LOADING(state, loading) {\r\n    state.loading = loading;\r\n  },\r\n  SET_ERROR(state, error) {\r\n    state.error = error;\r\n  },\r\n};\r\n\r\nconst isExpired = (token) => {\r\n  if (!token) return false;\r\n  const decodedToken = jwtDecode(token);\r\n  const currentTime = Date.now() / 1000;\r\n  return decodedToken.exp < currentTime;\r\n};\r\n\r\nconst actions = {\r\n  async fetchReceipts({ commit, rootState }, id) {\r\n    commit(\"SET_LOADING\", true);\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get(\r\n        `api/GoodsReceipt/ReadReceipts/${id}`,\r\n        configuration\r\n      );\r\n      commit(\"SET_RECEIPTS\", response.data);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    } finally {\r\n      commit(\"SET_LOADING\", false);\r\n    }\r\n  },\r\n  async fetchReceipt({ commit, rootState }, { text, id }) {\r\n    commit(\"SET_LOADING\", true);\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = {\r\n        headers: header,\r\n        params: {\r\n          text: text,\r\n          id: id,\r\n        },\r\n      };\r\n\r\n      const response = await axios.get(\r\n        \"api/GoodsReceipt/SearchReceipt\",\r\n        configuration\r\n      );\r\n      commit(\"SET_RECEIPTS\", response.data);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    } finally {\r\n      commit(\"SET_LOADING\", false);\r\n    }\r\n  },\r\n  async fetchDetail({ commit, rootState }, id) {\r\n    commit(\"SET_LOADING\", true);\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get(\r\n        `api/GoodsReceipt/ReadDetails/${id}`,\r\n        configuration\r\n      );\r\n      commit(\"SET_DETAILS_RECEIPT\", response.data);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    } finally {\r\n      commit(\"SET_LOADING\", false);\r\n    }\r\n  },\r\n  async createReceipt({ commit, dispatch, rootState }, receipt) {\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      await axios.post(\r\n        \"api/GoodsReceipt/CreateReceipt\",\r\n        receipt,\r\n        configuration\r\n      );\r\n      dispatch(\"fetchReceipts\", this.$store.state.currentUser.pk_warehouse);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    }\r\n  },\r\n  async disabledReceipt({ commit, dispatch, rootState }, id) {\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      await axios.put(`api/GoodsReceipt/DisabledReceipt/${id}`,{},configuration);\r\n      dispatch(\"fetchReceipts\", this.$store.state.currentUser.pk_warehouse);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    }\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  receipts: (state) => state.receipts,\r\n  selectedReceipt: (state) => state.selectedReceipt,\r\n  detailsReceipt: (state) => state.detailsReceipt,\r\n  loading: (state) => state.loading,\r\n  error: (state) => state.error,\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}