{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from \"jwt-decode\";\nimport store from \"@/store\";\nconst state = {\n  issues: [],\n  detailsIssue: [],\n  selectedIssue: null,\n  loading: false,\n  error: null\n};\nconst mutations = {\n  SET_ISSUES(state, issues) {\n    state.issues = issues;\n  },\n  SET_DETAILS_ISSUE(state, detailsIssue) {\n    state.detailsIssue = detailsIssue;\n  },\n  SET_SELECTED_ISSUE(state, issue) {\n    state.selectedIssue = issue;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nconst isExpired = token => {\n  if (!token) return false;\n  const decodedToken = jwtDecode(token);\n  const currentTime = Date.now() / 1000;\n  return decodedToken.exp < currentTime;\n};\nconst actions = {\n  async fetchIssues({\n    commit,\n    rootState\n  }, id) {\n    commit(\"SET_LOADING\", true);\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get(`api/GoodsIssue/ReadIssues/${id}`, configuration);\n      console.log(response.data);\n      commit(\"SET_ISSUES\", response.data);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    } finally {\n      commit(\"SET_LOADING\", false);\n    }\n  },\n  async fetchIssue({\n    commit,\n    rootState\n  }, {\n    text,\n    id\n  }) {\n    commit(\"SET_LOADING\", true);\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header,\n        params: {\n          text: text,\n          id: id\n        }\n      };\n      const response = await axios.get(\"api/GoodsIssue/SearchIssue\", configuration);\n      commit(\"SET_ISSUES\", response.data);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    } finally {\n      commit(\"SET_LOADING\", false);\n    }\n  },\n  async fetchDetail({\n    commit,\n    rootState\n  }, id) {\n    commit(\"SET_LOADING\", true);\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get(`api/GoodsIssue/ReadDetails/${id}`, configuration);\n      commit(\"SET_DETAILS_ISSUE\", response.data);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    } finally {\n      commit(\"SET_LOADING\", false);\n    }\n  },\n  async createIssue({\n    commit,\n    rootState\n  }, issue) {\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      await axios.post(\"api/GoodsIssue/CreateIssue\", issue, configuration);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    }\n  },\n  async disabledIssue({\n    commit,\n    rootState\n  }, id) {\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      await axios.put(`api/GoodsIssue/DisabledIssue/${id}`, {}, configuration);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    }\n  }\n};\nconst getters = {\n  issues: state => state.issues,\n  selectedIssue: state => state.selectedIssue,\n  detailsIssue: state => state.detailsIssue,\n  loading: state => state.loading,\n  error: state => state.error\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","jwtDecode","store","state","issues","detailsIssue","selectedIssue","loading","error","mutations","SET_ISSUES","SET_DETAILS_ISSUE","SET_SELECTED_ISSUE","issue","SET_LOADING","SET_ERROR","isExpired","token","decodedToken","currentTime","Date","now","exp","actions","fetchIssues","commit","rootState","id","dispatch","header","Authorization","configuration","headers","response","get","console","log","data","message","fetchIssue","text","params","fetchDetail","createIssue","post","disabledIssue","put","getters","namespaced"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/modules/goodsissue.js"],"sourcesContent":["import axios from 'axios';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport store from \"@/store\";\r\n\r\nconst state = {\r\n  issues: [],\r\n  detailsIssue: [],\r\n  selectedIssue: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst mutations = {\r\n  SET_ISSUES(state, issues) {\r\n    state.issues = issues;\r\n  },\r\n  SET_DETAILS_ISSUE(state, detailsIssue) {\r\n    state.detailsIssue = detailsIssue;\r\n  },\r\n  SET_SELECTED_ISSUE(state, issue) {\r\n    state.selectedIssue = issue;\r\n  },\r\n  SET_LOADING(state, loading) {\r\n    state.loading = loading;\r\n  },\r\n  SET_ERROR(state, error) {\r\n    state.error = error;\r\n  },\r\n};\r\n\r\nconst isExpired = (token) => {\r\n  if (!token) return false;\r\n  const decodedToken = jwtDecode(token);\r\n  const currentTime = Date.now() / 1000;\r\n  return decodedToken.exp < currentTime;\r\n};\r\n\r\nconst actions = {\r\n  async fetchIssues({ commit, rootState }, id) {\r\n    commit(\"SET_LOADING\", true);\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get(`api/GoodsIssue/ReadIssues/${id}`, configuration);\r\n      console.log(response.data);\r\n      commit(\"SET_ISSUES\", response.data);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    } finally {\r\n      commit(\"SET_LOADING\", false);\r\n    }\r\n  },\r\n  async fetchIssue({ commit, rootState }, { text, id }) {\r\n    commit(\"SET_LOADING\", true);\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = {\r\n        headers: header,\r\n        params: {\r\n          text: text,\r\n          id: id,\r\n        },\r\n      };\r\n\r\n      const response = await axios.get(\"api/GoodsIssue/SearchIssue\", configuration);\r\n      commit(\"SET_ISSUES\", response.data);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    } finally {\r\n      commit(\"SET_LOADING\", false);\r\n    }\r\n  },\r\n  async fetchDetail({ commit, rootState }, id) {\r\n    commit(\"SET_LOADING\", true);\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get(`api/GoodsIssue/ReadDetails/${id}`, configuration);\r\n      commit(\"SET_DETAILS_ISSUE\", response.data);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    } finally {\r\n      commit(\"SET_LOADING\", false);\r\n    }\r\n  },\r\n  async createIssue({ commit, rootState }, issue) {\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      await axios.post(\"api/GoodsIssue/CreateIssue\", issue, configuration);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    }\r\n  },\r\n  async disabledIssue({ commit, rootState }, id) {\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      await axios.put(`api/GoodsIssue/DisabledIssue/${id}`,{},configuration);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    }\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  issues: (state) => state.issues,\r\n  selectedIssue: (state) => state.selectedIssue,\r\n  detailsIssue: (state) => state.detailsIssue,\r\n  loading: (state) => state.loading,\r\n  error: (state) => state.error,\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}