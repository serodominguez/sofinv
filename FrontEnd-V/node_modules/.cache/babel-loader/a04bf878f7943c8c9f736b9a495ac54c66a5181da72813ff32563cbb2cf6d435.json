{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport { jwtDecode } from 'jwt-decode';\nimport router from '@/router/index';\nimport brand from './modules/brand';\nimport category from './modules/category';\nimport goodsreceipt from './modules/goodsreceipt';\nimport product from './modules/product';\nimport role from './modules/role';\nimport store from './modules/store';\nimport supplier from './modules/supplier';\nimport user from './modules/user';\nimport warehouse from './modules/warehouse';\nconst storeJS = createStore({\n  state: {\n    token: null,\n    currentUser: null\n  },\n  getters: {\n    isAuthenticated(state) {\n      return !!state.token;\n    },\n    getCurrentUser(state) {\n      return state.currentUser;\n    }\n  },\n  mutations: {\n    SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_USER(state, user) {\n      state.currentUser = user;\n    }\n  },\n  actions: {\n    saveToken({\n      commit\n    }, token) {\n      commit(\"SET_TOKEN\", token);\n      commit(\"SET_USER\", jwtDecode(token));\n      localStorage.setItem(\"token\", token);\n    },\n    auto({\n      commit,\n      dispatch\n    }) {\n      let token = localStorage.getItem(\"token\");\n      if (token) {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp < currentTime) {\n          dispatch('logoff');\n          return;\n        } else {\n          commit(\"SET_TOKEN\", token);\n          commit(\"SET_USER\", jwtDecode(token));\n        }\n      }\n      router.push({\n        name: \"dashboard\"\n      });\n    },\n    logoff({\n      commit\n    }) {\n      commit(\"SET_TOKEN\", null);\n      commit(\"SET_USER\", null);\n      localStorage.removeItem(\"token\");\n      router.push({\n        name: \"login\"\n      });\n    }\n  },\n  modules: {\n    brand,\n    category,\n    goodsreceipt,\n    product,\n    role,\n    store,\n    supplier,\n    user,\n    warehouse\n  }\n});\nexport default storeJS;","map":{"version":3,"names":["createStore","jwtDecode","router","brand","category","goodsreceipt","product","role","store","supplier","user","warehouse","storeJS","state","token","currentUser","getters","isAuthenticated","getCurrentUser","mutations","SET_TOKEN","SET_USER","actions","saveToken","commit","localStorage","setItem","auto","dispatch","getItem","decodedToken","currentTime","Date","now","exp","push","name","logoff","removeItem","modules"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport { jwtDecode } from 'jwt-decode';\nimport router from '@/router/index'\nimport brand from './modules/brand';\nimport category from './modules/category';\nimport goodsreceipt from './modules/goodsreceipt';\nimport product from './modules/product';\nimport role from './modules/role';\nimport store from './modules/store';\nimport supplier from './modules/supplier';\nimport user from './modules/user';\nimport warehouse from './modules/warehouse';\n\nconst storeJS = createStore({\n  state: {\n    token: null,\n    currentUser: null,\n  },\n\n  getters: {\n    isAuthenticated(state) {\n      return !!state.token;\n    },\n    getCurrentUser (state) {\n      return state.currentUser ;\n    }\n  },\n\n  mutations: {\n    SET_TOKEN(state, token) {\n      state.token = token\n    },\n    SET_USER(state, user) {\n      state.currentUser = user\n    }\n  },\n\n  actions: {\n    saveToken({ commit }, token) {\n      commit(\"SET_TOKEN\", token);\n      commit(\"SET_USER\", jwtDecode(token));\n      localStorage.setItem(\"token\", token);\n    },\n    auto({ commit, dispatch }) {\n      let token = localStorage.getItem(\"token\");\n      if (token) {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp < currentTime) {\n          dispatch('logoff');\n          return;\n        } else {\n          commit(\"SET_TOKEN\", token);\n          commit(\"SET_USER\", jwtDecode(token));\n        }\n      }\n      router.push({ name: \"dashboard\" });\n    },\n    logoff({ commit }) {\n      commit(\"SET_TOKEN\", null);\n      commit(\"SET_USER\", null);\n      localStorage.removeItem(\"token\");\n      router.push({ name: \"login\" });\n    },\n  },\n\n  modules: {\n    brand,\n    category,\n    goodsreceipt,\n    product,\n    role,\n    store,\n    supplier,\n    user,\n    warehouse,\n  },\n});\n\nexport default storeJS;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,SAAS,MAAM,qBAAqB;AAE3C,MAAMC,OAAO,GAAGZ,WAAW,CAAC;EAC1Ba,KAAK,EAAE;IACLC,KAAK,EAAE,IAAI;IACXC,WAAW,EAAE;EACf,CAAC;EAEDC,OAAO,EAAE;IACPC,eAAeA,CAACJ,KAAK,EAAE;MACrB,OAAO,CAAC,CAACA,KAAK,CAACC,KAAK;IACtB,CAAC;IACDI,cAAcA,CAAEL,KAAK,EAAE;MACrB,OAAOA,KAAK,CAACE,WAAW;IAC1B;EACF,CAAC;EAEDI,SAAS,EAAE;IACTC,SAASA,CAACP,KAAK,EAAEC,KAAK,EAAE;MACtBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDO,QAAQA,CAACR,KAAK,EAAEH,IAAI,EAAE;MACpBG,KAAK,CAACE,WAAW,GAAGL,IAAI;IAC1B;EACF,CAAC;EAEDY,OAAO,EAAE;IACPC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAEV,KAAK,EAAE;MAC3BU,MAAM,CAAC,WAAW,EAAEV,KAAK,CAAC;MAC1BU,MAAM,CAAC,UAAU,EAAEvB,SAAS,CAACa,KAAK,CAAC,CAAC;MACpCW,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACtC,CAAC;IACDa,IAAIA,CAAC;MAAEH,MAAM;MAAEI;IAAS,CAAC,EAAE;MACzB,IAAId,KAAK,GAAGW,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;MACzC,IAAIf,KAAK,EAAE;QACT,MAAMgB,YAAY,GAAG7B,SAAS,CAACa,KAAK,CAAC;QACrC,MAAMiB,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;QACrC,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;UAClCH,QAAQ,CAAC,QAAQ,CAAC;UAClB;QACF,CAAC,MAAM;UACLJ,MAAM,CAAC,WAAW,EAAEV,KAAK,CAAC;UAC1BU,MAAM,CAAC,UAAU,EAAEvB,SAAS,CAACa,KAAK,CAAC,CAAC;QACtC;MACF;MACAZ,MAAM,CAACiC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAC;IACpC,CAAC;IACDC,MAAMA,CAAC;MAAEb;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC;MACzBA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;MACxBC,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;MAChCpC,MAAM,CAACiC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IAChC;EACF,CAAC;EAEDG,OAAO,EAAE;IACPpC,KAAK;IACLC,QAAQ;IACRC,YAAY;IACZC,OAAO;IACPC,IAAI;IACJC,KAAK;IACLC,QAAQ;IACRC,IAAI;IACJC;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}