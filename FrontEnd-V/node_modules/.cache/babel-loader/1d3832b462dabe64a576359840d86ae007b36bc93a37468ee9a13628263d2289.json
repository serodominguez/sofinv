{"ast":null,"code":"import axios from 'axios';\nconst state = {\n  brands: [],\n  brand: null\n};\nconst getters = {\n  allBrands: state => state.brands,\n  currentBrand: state => state.brand\n};\nconst actions = {\n  async fetchBrands({\n    commit\n  }) {\n    try {\n      const response = await axios.get('api/Brands/ReaderBrands');\n      commit('setBrands', response.data);\n    } catch (error) {\n      console.error('Error fetching brands:', error);\n    }\n  },\n  async addBrand({\n    dispatch\n  }, brand) {\n    try {\n      await axios.post('api/Brands/CreateBrand', brand);\n      dispatch('fetchBrands');\n    } catch (error) {\n      console.error('Error adding brand:', error);\n    }\n  },\n  async updateBrand({\n    dispatch\n  }, brand) {\n    try {\n      await axios.put(`api/Brands/UpdateBrand/${brand.pK_BRAND}`, brand);\n      dispatch('fetchBrands');\n    } catch (error) {\n      console.error('Error updating brand:', error);\n    }\n  },\n  /*   async deleteBrand({ dispatch }, brandId) {\r\n      try {\r\n        await axios.delete(`/brands/${brandId}`);\r\n        dispatch('fetchBrands');\r\n      } catch (error) {\r\n        console.error('Error deleting brand:', error);\r\n      }\r\n    }, */\n  setCurrentBrand({\n    commit\n  }, brand) {\n    commit('setCurrentBrand', brand);\n  }\n};\nconst mutations = {\n  setBrands: (state, brands) => state.brands = brands,\n  setCurrentBrand: (state, brand) => state.brand = brand\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","brands","brand","getters","allBrands","currentBrand","actions","fetchBrands","commit","response","get","data","error","console","addBrand","dispatch","post","updateBrand","put","pK_BRAND","setCurrentBrand","mutations","setBrands"],"sources":["C:/Users/Sergio/Desktop/SOFINV/New folder/FrontEnd/src/store/modules/brand.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst state = {\r\n  brands: [],\r\n  brand: null,\r\n};\r\n\r\nconst getters = {\r\n  allBrands: (state) => state.brands,\r\n  currentBrand: (state) => state.brand,\r\n};\r\n\r\nconst actions = {\r\n  async fetchBrands({ commit }) {\r\n    try {\r\n      const response = await axios.get('api/Brands/ReaderBrands');\r\n      commit('setBrands', response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching brands:', error);\r\n    }\r\n  },\r\n  async addBrand({ dispatch }, brand) {\r\n    try {\r\n      await axios.post('api/Brands/CreateBrand', brand);\r\n      dispatch('fetchBrands');\r\n    } catch (error) {\r\n      console.error('Error adding brand:', error);\r\n    }\r\n  },\r\n  async updateBrand({ dispatch }, brand) {\r\n    try {\r\n      await axios.put(`api/Brands/UpdateBrand/${brand.pK_BRAND}`, brand);\r\n      dispatch('fetchBrands');\r\n    } catch (error) {\r\n      console.error('Error updating brand:', error);\r\n    }\r\n  },\r\n/*   async deleteBrand({ dispatch }, brandId) {\r\n    try {\r\n      await axios.delete(`/brands/${brandId}`);\r\n      dispatch('fetchBrands');\r\n    } catch (error) {\r\n      console.error('Error deleting brand:', error);\r\n    }\r\n  }, */\r\n  setCurrentBrand({ commit }, brand) {\r\n    commit('setCurrentBrand', brand);\r\n  },\r\n};\r\n\r\nconst mutations = {\r\n  setBrands: (state, brands) => (state.brands = brands),\r\n  setCurrentBrand: (state, brand) => (state.brand = brand),\r\n};\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations,\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAG;EACZC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,SAAS,EAAGJ,KAAK,IAAKA,KAAK,CAACC,MAAM;EAClCI,YAAY,EAAGL,KAAK,IAAKA,KAAK,CAACE;AACjC,CAAC;AAED,MAAMI,OAAO,GAAG;EACd,MAAMC,WAAWA,CAAC;IAAEC;EAAO,CAAC,EAAE;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,yBAAyB,CAAC;MAC3DF,MAAM,CAAC,WAAW,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EACD,MAAME,QAAQA,CAAC;IAAEC;EAAS,CAAC,EAAEb,KAAK,EAAE;IAClC,IAAI;MACF,MAAMH,KAAK,CAACiB,IAAI,CAAC,wBAAwB,EAAEd,KAAK,CAAC;MACjDa,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EACD,MAAMK,WAAWA,CAAC;IAAEF;EAAS,CAAC,EAAEb,KAAK,EAAE;IACrC,IAAI;MACF,MAAMH,KAAK,CAACmB,GAAG,CAAC,0BAA0BhB,KAAK,CAACiB,QAAQ,EAAE,EAAEjB,KAAK,CAAC;MAClEa,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEQ,eAAeA,CAAC;IAAEZ;EAAO,CAAC,EAAEN,KAAK,EAAE;IACjCM,MAAM,CAAC,iBAAiB,EAAEN,KAAK,CAAC;EAClC;AACF,CAAC;AAED,MAAMmB,SAAS,GAAG;EAChBC,SAAS,EAAEA,CAACtB,KAAK,EAAEC,MAAM,KAAMD,KAAK,CAACC,MAAM,GAAGA,MAAO;EACrDmB,eAAe,EAAEA,CAACpB,KAAK,EAAEE,KAAK,KAAMF,KAAK,CAACE,KAAK,GAAGA;AACpD,CAAC;AAED,eAAe;EACbF,KAAK;EACLG,OAAO;EACPG,OAAO;EACPe;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}