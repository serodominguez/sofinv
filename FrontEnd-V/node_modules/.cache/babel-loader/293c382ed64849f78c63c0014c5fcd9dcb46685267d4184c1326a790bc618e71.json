{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport BrandForm from './BrandForm.vue';\nimport BrandModal from './BrandModal.vue';\nexport default {\n  components: {\n    BrandForm,\n    BrandModal\n  },\n  data() {\n    return {\n      items: [5, 10, 25],\n      pages: \"Marcas por Página\",\n      search: null,\n      modal: false,\n      statusModal: false,\n      selectedBrand: null\n    };\n  },\n  computed: {\n    ...mapGetters('brand', ['brands', 'loading']),\n    headers() {\n      return [{\n        title: 'Marca',\n        key: 'branD_NAME'\n      }, {\n        title: 'Estado',\n        key: 'status'\n      }, {\n        title: 'Acciones',\n        key: 'actions',\n        sortable: false\n      }];\n    }\n  },\n  methods: {\n    initialize() {},\n    ...mapActions('brand', ['fetchBrands']),\n    openModal() {\n      this.selectedBrand = {\n        pK_BRAND: null,\n        branD_NAME: ''\n      };\n      this.modal = true;\n    },\n    editBrand(brand) {\n      this.selectedBrand = {\n        ...brand\n      };\n      this.modal = true;\n    },\n    openStatusModal(brand, action) {\n      this.selectedBrand = brand;\n      this.statusModal = true;\n      this.$refs.brandModal.action = action; // Set the action (1 for activate, 2 for deactivate)\n    }\n  },\n  mounted() {\n    this.fetchBrands();\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","BrandForm","BrandModal","components","data","items","pages","search","modal","statusModal","selectedBrand","computed","headers","title","key","sortable","methods","initialize","openModal","pK_BRAND","branD_NAME","editBrand","brand","openStatusModal","action","$refs","brandModal","mounted","fetchBrands"],"sources":["C:\\Users\\Sergio\\Desktop\\SOFINV\\FrontEnd\\src\\components\\Brand\\BrandList.vue"],"sourcesContent":["<template>\r\n  <v-data-table :headers=\"headers\" :items=\"brands\" :search=\"search\" :items-per-page-text=\"pages\" :items-per-page-options=\"[5, 10, 20]\" :items-per-page=\"5\" :loading=\"loading\" loading-text=\"Cargando... Espere por favor\">\r\n    <template v-slot:item=\"{ item }\">\r\n      <tr>\r\n        <td>{{ item.branD_NAME }}</td>\r\n        <td>{{ item.status }}</td>\r\n        <td>\r\n          <v-icon class=\"me-2\" size=\"small\" @click=\"editBrand(item)\">mdi-pencil</v-icon>\r\n          <v-icon size=\"small\" @click=\"openStatusModal(item, 1)\">mdi-check</v-icon>\r\n          <v-icon size=\"small\" @click=\"openStatusModal(item, 2)\">mdi-block</v-icon>\r\n        </td>\r\n      </tr>\r\n    </template>\r\n    <template v-slot:top>\r\n      <v-toolbar>\r\n        <v-toolbar-title>Gestión de Marcas</v-toolbar-title>\r\n        <v-spacer></v-spacer>\r\n        <v-text-field append-inner-icon=\"mdi-magnify\" density=\"compact\" label=\"Búsqueda\" variant=\"solo\" hide-details single-line v-model=\"search\"></v-text-field>\r\n        <v-card-actions>\r\n          <v-btn @click=\"openModal\" color=\"primary\" size=\"large\"> Nuevo </v-btn>\r\n        </v-card-actions>\r\n      </v-toolbar>\r\n    </template>\r\n    <template v-slot:no-data>\r\n      <v-btn color=\"primary\" @click=\"initialize\"> Reset </v-btn>\r\n    </template>\r\n  </v-data-table>\r\n  <BrandForm v-model=\"modal\" :brand=\"selectedBrand\" @saved=\"fetchBrands\" />\r\n  <BrandModal v-model=\"statusModal\" :brand=\"selectedBrand\" @close=\"statusModal = false\" />\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport BrandForm from './BrandForm.vue';\r\nimport BrandModal from './BrandModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    BrandForm,\r\n    BrandModal\r\n  },\r\n  data() {\r\n    return {\r\n      items: [5, 10, 25],\r\n      pages: \"Marcas por Página\",\r\n      search: null,\r\n      modal: false,\r\n      statusModal: false,\r\n      selectedBrand: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('brand', ['brands', 'loading']),\r\n    headers() {\r\n      return [\r\n        { title: 'Marca', key: 'branD_NAME' },\r\n        { title: 'Estado', key: 'status' },\r\n        { title: 'Acciones', key: 'actions', sortable: false },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    initialize() {},\r\n    ...mapActions('brand', ['fetchBrands']),\r\n    openModal() {\r\n      this.selectedBrand = { pK_BRAND: null, branD_NAME: '' };\r\n      this.modal = true;\r\n    },\r\n    editBrand(brand) {\r\n      this.selectedBrand = { ...brand };\r\n      this.modal = true;\r\n    },\r\n    openStatusModal(brand, action) {\r\n      this.selectedBrand = brand;\r\n      this.statusModal = true;\r\n      this.$refs.brandModal.action = action; // Set the action (1 for activate, 2 for deactivate)\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchBrands();\r\n  },\r\n};\r\n</script>"],"mappings":"AAgCA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,SAAQ,MAAO,iBAAiB;AACvC,OAAOC,UAAS,MAAO,kBAAkB;AAEzC,eAAe;EACbC,UAAU,EAAE;IACVF,SAAS;IACTC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAClBC,KAAK,EAAE,mBAAmB;MAC1BC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,KAAK;MACZC,WAAW,EAAE,KAAK;MAClBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGZ,UAAU,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC7Ca,OAAOA,CAAA,EAAG;MACR,OAAO,CACL;QAAEC,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAa,CAAC,EACrC;QAAED,KAAK,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAS,CAAC,EAClC;QAAED,KAAK,EAAE,UAAU;QAAEC,GAAG,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAM,CAAC,CACvD;IACH;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG,CAAC,CAAC;IACf,GAAGjB,UAAU,CAAC,OAAO,EAAE,CAAC,aAAa,CAAC,CAAC;IACvCkB,SAASA,CAAA,EAAG;MACV,IAAI,CAACR,aAAY,GAAI;QAAES,QAAQ,EAAE,IAAI;QAAEC,UAAU,EAAE;MAAG,CAAC;MACvD,IAAI,CAACZ,KAAI,GAAI,IAAI;IACnB,CAAC;IACDa,SAASA,CAACC,KAAK,EAAE;MACf,IAAI,CAACZ,aAAY,GAAI;QAAE,GAAGY;MAAM,CAAC;MACjC,IAAI,CAACd,KAAI,GAAI,IAAI;IACnB,CAAC;IACDe,eAAeA,CAACD,KAAK,EAAEE,MAAM,EAAE;MAC7B,IAAI,CAACd,aAAY,GAAIY,KAAK;MAC1B,IAAI,CAACb,WAAU,GAAI,IAAI;MACvB,IAAI,CAACgB,KAAK,CAACC,UAAU,CAACF,MAAK,GAAIA,MAAM,EAAE;IACzC;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}