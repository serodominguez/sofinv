{"ast":null,"code":"export default {\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: true\n    },\n    brand: {\n      type: Object,\n      default: () => ({\n        pK_BRAND: null,\n        branD_NAME: ''\n      })\n    }\n  },\n  data() {\n    return {\n      isOpen: this.modelValue,\n      valid: false,\n      localBrand: {\n        ...this.brand\n      },\n      // Copia local del objeto brand\n      rules: {\n        required: value => !!value || 'Este campo es requerido.'\n      }\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.isOpen = newValue;\n    },\n    isOpen(newValue) {\n      this.$emit('update:modelValue', newValue);\n    },\n    brand: {\n      handler(newBrand) {\n        this.localBrand = {\n          ...newBrand\n        }; // Actualiza la copia local cuando cambia el prop\n      },\n      deep: true\n    }\n  },\n  methods: {\n    uppercase() {\n      this.localBrand.branD_NAME = this.localBrand.branD_NAME.toUpperCase();\n    },\n    close() {\n      this.isOpen = false;\n    },\n    async saveBrand() {\n      if (this.$refs.form.validate()) {\n        try {\n          if (this.localBrand.pK_BRAND) {\n            // Si hay un ID, actualiza la marca\n            await this.$store.dispatch('brand/updateBrand', {\n              ...this.localBrand\n            });\n          } else {\n            // Si no hay ID, crea una nueva marca\n            await this.$store.dispatch('brand/createBrand', {\n              ...this.localBrand\n            });\n          }\n          this.$emit('saved', {\n            ...this.localBrand\n          }); // Emitir la copia local\n          this.close();\n        } catch (error) {\n          console.error('Error al guardar la marca:', error);\n          // Aquí puedes mostrar un mensaje de error al usuario si lo deseas\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","modelValue","type","Boolean","required","brand","Object","default","pK_BRAND","branD_NAME","data","isOpen","valid","localBrand","rules","value","watch","newValue","$emit","handler","newBrand","deep","methods","uppercase","toUpperCase","close","saveBrand","$refs","form","validate","$store","dispatch","error","console"],"sources":["C:\\Users\\Sergio\\Desktop\\SOFINV\\FrontEnd\\src\\components\\Brand\\BrandForm.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"isOpen\" max-width=\"500px\" persistent>\r\n    <v-card>\r\n      <v-card-title class=\"bg-surface-light pt-4\">\r\n        <span>{{ localBrand.pK_BRAND ? 'Editar Marca' : 'Agregar Marca' }}</span>\r\n      </v-card-title>\r\n      <v-divider></v-divider>\r\n      <v-card-text>\r\n        <v-form ref=\"form\" v-model=\"valid\">\r\n          <v-container>\r\n            <v-row>\r\n              <v-col cols=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n                <v-text-field color=\"primary\" variant=\"underlined\" v-model=\"localBrand.branD_NAME\"\r\n                  :rules=\"[rules.required]\" counter=\"40\" :maxlength=\"40\" @keyup=\"uppercase\" label=\"Nombre de la Marca\"\r\n                  required />\r\n              </v-col>\r\n            </v-row>\r\n          </v-container>\r\n        </v-form>\r\n      </v-card-text>\r\n      <v-col>\r\n        <v-card-actions>\r\n          <v-btn color=\"blue\" dark class=\"mb-2\" elevation=\"4\" @click=\"saveBrand\" :disabled=\"!valid\">Guardar</v-btn>\r\n          <v-btn color=\"red\" dark class=\"mb-2\" elevation=\"4\" @click=\"close\">Cancelar</v-btn>\r\n        </v-card-actions>\r\n      </v-col>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    modelValue: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    brand: {\r\n      type: Object,\r\n      default: () => ({\r\n        pK_BRAND: null,\r\n        branD_NAME: ''\r\n      }),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: this.modelValue,\r\n      valid: false,\r\n      localBrand: { ...this.brand }, // Copia local del objeto brand\r\n      rules: {\r\n        required: (value) => !!value || 'Este campo es requerido.',\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    modelValue(newValue) {\r\n      this.isOpen = newValue;\r\n    },\r\n    isOpen(newValue) {\r\n      this.$emit('update:modelValue', newValue);\r\n    },\r\n    brand: {\r\n      handler(newBrand) {\r\n        this.localBrand = { ...newBrand }; // Actualiza la copia local cuando cambia el prop\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    uppercase() {\r\n      this.localBrand.branD_NAME = this.localBrand.branD_NAME.toUpperCase();\r\n    },\r\n    close() {\r\n      this.isOpen = false;\r\n    },\r\n    async saveBrand() {\r\n      if (this.$refs.form.validate()) {\r\n        try {\r\n          if (this.localBrand.pK_BRAND) {\r\n            // Si hay un ID, actualiza la marca\r\n            await this.$store.dispatch('brand/updateBrand', { ...this.localBrand });\r\n          } else {\r\n            // Si no hay ID, crea una nueva marca\r\n            await this.$store.dispatch('brand/createBrand', { ...this.localBrand });\r\n          }\r\n          this.$emit('saved', { ...this.localBrand }); // Emitir la copia local\r\n          this.close();\r\n        } catch (error) {\r\n          console.error('Error al guardar la marca:', error);\r\n          // Aquí puedes mostrar un mensaje de error al usuario si lo deseas\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AA+BA,eAAe;EACbA,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC;IACH;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI,CAACV,UAAU;MACvBW,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE;QAAE,GAAG,IAAI,CAACR;MAAM,CAAC;MAAE;MAC/BS,KAAK,EAAE;QACLV,QAAQ,EAAGW,KAAK,IAAK,CAAC,CAACA,KAAI,IAAK;MAClC;IACF,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLf,UAAUA,CAACgB,QAAQ,EAAE;MACnB,IAAI,CAACN,MAAK,GAAIM,QAAQ;IACxB,CAAC;IACDN,MAAMA,CAACM,QAAQ,EAAE;MACf,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC3C,CAAC;IACDZ,KAAK,EAAE;MACLc,OAAOA,CAACC,QAAQ,EAAE;QAChB,IAAI,CAACP,UAAS,GAAI;UAAE,GAAGO;QAAS,CAAC,EAAE;MACrC,CAAC;MACDC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACV,UAAU,CAACJ,UAAS,GAAI,IAAI,CAACI,UAAU,CAACJ,UAAU,CAACe,WAAW,CAAC,CAAC;IACvE,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACd,MAAK,GAAI,KAAK;IACrB,CAAC;IACD,MAAMe,SAASA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;QAC9B,IAAI;UACF,IAAI,IAAI,CAAChB,UAAU,CAACL,QAAQ,EAAE;YAC5B;YACA,MAAM,IAAI,CAACsB,MAAM,CAACC,QAAQ,CAAC,mBAAmB,EAAE;cAAE,GAAG,IAAI,CAAClB;YAAW,CAAC,CAAC;UACzE,OAAO;YACL;YACA,MAAM,IAAI,CAACiB,MAAM,CAACC,QAAQ,CAAC,mBAAmB,EAAE;cAAE,GAAG,IAAI,CAAClB;YAAW,CAAC,CAAC;UACzE;UACA,IAAI,CAACK,KAAK,CAAC,OAAO,EAAE;YAAE,GAAG,IAAI,CAACL;UAAW,CAAC,CAAC,EAAE;UAC7C,IAAI,CAACY,KAAK,CAAC,CAAC;QACd,EAAE,OAAOO,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClD;QACF;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}