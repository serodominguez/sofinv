{"ast":null,"code":"import axios from 'axios';\nconst state = {\n  warehouses: [],\n  loading: false,\n  error: null\n};\nconst mutations = {\n  SET_WAREHOUSES(state, warehouses) {\n    state.warehouses = warehouses;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nconst actions = {\n  async fetchStock({\n    commit\n  }, {\n    text,\n    id\n  }) {\n    try {\n      const response = await axios.get(`https://api.example.com/stock`, {\n        params: {\n          search: text,\n          storeId: id\n        }\n      });\n      // Retorna los datos directamente\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching stock:', error);\n      throw error; // Lanza el error para manejarlo en el componente si es necesario\n    }\n  }\n};\nconst getters = {\n  warehouses: state => state.warehouses,\n  loading: state => state.loading,\n  error: state => state.error\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","state","warehouses","loading","error","mutations","SET_WAREHOUSES","SET_LOADING","SET_ERROR","actions","fetchStock","commit","text","id","response","get","params","search","storeId","data","console","getters","namespaced"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/modules/warehouse.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst state = {\r\n    warehouses: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  const mutations = {\r\n    SET_WAREHOUSES(state, warehouses) {\r\n      state.warehouses = warehouses;\r\n    },\r\n    SET_LOADING(state, loading) {\r\n      state.loading = loading;\r\n    },\r\n    SET_ERROR(state, error) {\r\n      state.error = error;\r\n    },\r\n  };\r\n\r\n  const actions = {\r\n    async fetchStock({ commit }, { text, id }) {\r\n      try {\r\n        const response = await axios.get(`https://api.example.com/stock`, {\r\n          params: {\r\n            search: text,\r\n            storeId: id,\r\n          },\r\n        });\r\n        // Retorna los datos directamente\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching stock:', error);\r\n        throw error; // Lanza el error para manejarlo en el componente si es necesario\r\n      }\r\n    },\r\n  };\r\n\r\n  const getters = {\r\n    warehouses: (state) => state.warehouses,\r\n    loading: (state) => state.loading,\r\n    error: (state) => state.error,\r\n  };\r\n  \r\n  export default {\r\n    namespaced: true,\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters,\r\n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAG;EACVC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,cAAcA,CAACL,KAAK,EAAEC,UAAU,EAAE;IAChCD,KAAK,CAACC,UAAU,GAAGA,UAAU;EAC/B,CAAC;EACDK,WAAWA,CAACN,KAAK,EAAEE,OAAO,EAAE;IAC1BF,KAAK,CAACE,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDK,SAASA,CAACP,KAAK,EAAEG,KAAK,EAAE;IACtBH,KAAK,CAACG,KAAK,GAAGA,KAAK;EACrB;AACF,CAAC;AAED,MAAMK,OAAO,GAAG;EACd,MAAMC,UAAUA,CAAC;IAAEC;EAAO,CAAC,EAAE;IAAEC,IAAI;IAAEC;EAAG,CAAC,EAAE;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,+BAA+B,EAAE;QAChEC,MAAM,EAAE;UACNC,MAAM,EAAEL,IAAI;UACZM,OAAO,EAAEL;QACX;MACF,CAAC,CAAC;MACF;MACA,OAAOC,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdgB,OAAO,CAAChB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC;AAED,MAAMiB,OAAO,GAAG;EACdnB,UAAU,EAAGD,KAAK,IAAKA,KAAK,CAACC,UAAU;EACvCC,OAAO,EAAGF,KAAK,IAAKA,KAAK,CAACE,OAAO;EACjCC,KAAK,EAAGH,KAAK,IAAKA,KAAK,CAACG;AAC1B,CAAC;AAED,eAAe;EACbkB,UAAU,EAAE,IAAI;EAChBrB,KAAK;EACLI,SAAS;EACTI,OAAO;EACPY;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}