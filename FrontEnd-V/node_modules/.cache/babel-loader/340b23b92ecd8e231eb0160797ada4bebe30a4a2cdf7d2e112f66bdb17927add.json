{"ast":null,"code":"import axios from 'axios';\nconst state = {\n  stores: [],\n  selectedStore: null,\n  loading: false,\n  error: null\n};\nconst mutations = {\n  SET_STORES(state, stores) {\n    state.stores = stores;\n  },\n  SET_SELECTED_STORE(state, store) {\n    state.selectedStore = store;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nconst actions = {\n  async fetchStores({\n    commit,\n    rootState\n  }) {\n    commit('SET_LOADING', true);\n    try {\n      const token = rootState.token;\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get('api/Stores/ReadStores', configuration);\n      commit('SET_STORES', response.data);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  async fetchStore({\n    commit,\n    rootState\n  }, text) {\n    commit('SET_LOADING', true);\n    try {\n      const token = rootState.token;\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get(`api/Stores/SearchStore/${text}`, configuration);\n      commit('SET_STORES', response.data);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  async selectStores({\n    commit,\n    rootState\n  }) {\n    commit('SET_LOADING', true);\n    try {\n      const token = rootState.token;\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get('api/Stores/SelectStores', configuration);\n      commit('SET_STORES', response.data);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  async createStore({\n    dispatch,\n    rootState\n  }, store) {\n    const token = rootState.token;\n    let header = {\n      Authorization: \"Bearer \" + token\n    };\n    let configuration = {\n      headers: header\n    };\n    await axios.post('api/Stores/CreateStore', store, configuration);\n    dispatch('fetchStores');\n  },\n  async updateStore({\n    dispatch,\n    rootState\n  }, store) {\n    const token = rootState.token;\n    let header = {\n      Authorization: \"Bearer \" + token\n    };\n    let configuration = {\n      headers: header\n    };\n    await axios.put('api/Stores/UpdateStore', store, configuration);\n    dispatch('fetchStores');\n  },\n  async enabledStore({\n    dispatch,\n    rootState\n  }, id) {\n    const token = rootState.token;\n    let header = {\n      Authorization: \"Bearer \" + token\n    };\n    let configuration = {\n      headers: header\n    };\n    await axios.put(`api/Stores/EnabledStore/${id}`, {}, configuration);\n    dispatch('fetchStores');\n  },\n  async disabledStore({\n    dispatch,\n    rootState\n  }, id) {\n    const token = rootState.token;\n    let header = {\n      Authorization: \"Bearer \" + token\n    };\n    let configuration = {\n      headers: header\n    };\n    await axios.put(`api/Stores/DisabledStore/${id}`, {}, configuration);\n    dispatch('fetchStores');\n  }\n};\nconst getters = {\n  stores: state => state.stores,\n  selectedStore: state => state.selectedStore,\n  loading: state => state.loading,\n  error: state => state.error\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","state","stores","selectedStore","loading","error","mutations","SET_STORES","SET_SELECTED_STORE","store","SET_LOADING","SET_ERROR","actions","fetchStores","commit","rootState","token","header","Authorization","configuration","headers","response","get","data","message","fetchStore","text","selectStores","createStore","dispatch","post","updateStore","put","enabledStore","id","disabledStore","getters","namespaced"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/modules/store.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst state = {\r\n  stores: [],\r\n  selectedStore: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst mutations = {\r\n  SET_STORES(state, stores) {\r\n    state.stores = stores;\r\n  },\r\n  SET_SELECTED_STORE(state, store) {\r\n    state.selectedStore = store;\r\n  },\r\n  SET_LOADING(state, loading) {\r\n    state.loading = loading;\r\n  },\r\n  SET_ERROR(state, error) {\r\n    state.error = error;\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  async fetchStores({ commit, rootState }) {\r\n    commit('SET_LOADING', true);\r\n    try {\r\n      const token = rootState.token; \r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get('api/Stores/ReadStores', configuration);\r\n      commit('SET_STORES', response.data);\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message);\r\n    } finally {\r\n      commit('SET_LOADING', false);\r\n    }\r\n  },\r\n  async fetchStore({ commit, rootState }, text) {\r\n    commit('SET_LOADING', true);\r\n    try {\r\n      const token = rootState.token; \r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get(`api/Stores/SearchStore/${text}`, configuration);\r\n      commit('SET_STORES', response.data);\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message);\r\n    } finally {\r\n      commit('SET_LOADING', false);\r\n    }\r\n  },\r\n  async selectStores({ commit, rootState }) {\r\n    commit('SET_LOADING', true);\r\n    try {\r\n      const token = rootState.token; \r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get('api/Stores/SelectStores', configuration);\r\n      commit('SET_STORES', response.data);\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message);\r\n    } finally {\r\n      commit('SET_LOADING', false);\r\n    }\r\n  },\r\n  async createStore({ dispatch, rootState }, store) {\r\n    const token = rootState.token; \r\n    let header = { Authorization: \"Bearer \" + token };\r\n    let configuration = { headers: header };\r\n    await axios.post('api/Stores/CreateStore', store, configuration);\r\n    dispatch('fetchStores');\r\n  },\r\n  async updateStore({ dispatch, rootState }, store) {\r\n    const token = rootState.token; \r\n    let header = { Authorization: \"Bearer \" + token };\r\n    let configuration = { headers: header };\r\n    await axios.put('api/Stores/UpdateStore', store, configuration);\r\n    dispatch('fetchStores');\r\n  },\r\n  async enabledStore({ dispatch, rootState }, id) {\r\n    const token = rootState.token; \r\n    let header = { Authorization: \"Bearer \" + token };\r\n    let configuration = { headers: header };\r\n    await axios.put(`api/Stores/EnabledStore/${id}`, {}, configuration);\r\n    dispatch('fetchStores');\r\n  },\r\n  async disabledStore({ dispatch, rootState }, id) {\r\n    const token = rootState.token; \r\n    let header = { Authorization: \"Bearer \" + token };\r\n    let configuration = { headers: header };\r\n    await axios.put(`api/Stores/DisabledStore/${id}`, {}, configuration);\r\n    dispatch('fetchStores');\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  stores: (state) => state.stores,\r\n  selectedStore: (state) => state.selectedStore,\r\n  loading: (state) => state.loading,\r\n  error: (state) => state.error,\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}