{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false\n    },\n    receipt: {\n      type: Object,\n      default: () => ({\n        pK_RECEIPT: null,\n        code: '',\n        datE_PURCHASE: null,\n        datE_REGISTRATION: '',\n        typE_RECEIPT: '',\n        receipT_NUMBER: '',\n        annotations: '',\n        pK_SUPPLIER: null,\n        pK_USER: null,\n        pK_STORE: null\n      })\n    }\n  },\n  data() {\n    return {\n      isOpen: this.modelValue,\n      valid: false,\n      localReceipt: {\n        ...this.receipt\n      },\n      rules: {\n        required: value => !!value || 'Este campo es requerido.'\n      },\n      receiptTypes: ['FACTURA', 'RECIBO', 'REGULARIZACIÓN']\n    };\n  },\n  computed: {\n    ...mapGetters('goodsreceipt', ['receipts']),\n    ...mapGetters('supplier', ['suppliers'])\n  },\n  watch: {\n    modelValue(newValue) {\n      this.isOpen = newValue;\n    },\n    isOpen(newValue) {\n      this.$emit('update:modelValue', newValue);\n    },\n    receipt: {\n      handler(newReceipt) {\n        this.localReceipt = {\n          ...newReceipt\n        };\n      },\n      deep: true\n    }\n  },\n  methods: {\n    close() {\n      this.isOpen = false;\n      this.$emit('close');\n    },\n    async saveReceipt() {\n      if (this.$refs.form.validate()) {\n        try {\n          await this.$store.dispatch('goodsreceipt/createReceipt', {\n            ...this.localReceipt\n          });\n          this.$emit('saved', {\n            ...this.localReceipt\n          });\n          this.close();\n        } catch (error) {\n          console.error('Error al guardar la entrada:', error);\n        }\n      }\n    }\n  },\n  mounted() {\n    this.$store.dispatch('supplier/selectSuppliers');\n    if (this.localReceipt.pK_RECEIPT == null) {\n      this.localReceipt.datE_PURCHASE = null;\n    } /* else {\r\n      const parts = this.localReceipt.datE_PURCHASE.split('/');\r\n      if (parts.length === 3) {\r\n        const day = parseInt(parts[0], 10);\r\n        const month = parseInt(parts[1], 10) - 1;\r\n        const year = parseInt(parts[2], 10);\r\n        const date = new Date(year, month, day);\r\n        this.localReceipt.datE_PURCHASE = date;\r\n      } else {\r\n        console.error('Formato de fecha no válido:', this.localReceipt.datE_PURCHASE);\r\n      }\r\n      } */\n  }\n};","map":{"version":3,"names":["mapGetters","props","modelValue","type","Boolean","default","receipt","Object","pK_RECEIPT","code","datE_PURCHASE","datE_REGISTRATION","typE_RECEIPT","receipT_NUMBER","annotations","pK_SUPPLIER","pK_USER","pK_STORE","data","isOpen","valid","localReceipt","rules","required","value","receiptTypes","computed","watch","newValue","$emit","handler","newReceipt","deep","methods","close","saveReceipt","$refs","form","validate","$store","dispatch","error","console","mounted"],"sources":["C:\\Users\\Sergio\\Desktop\\SOFINV\\FrontEnd\\src\\components\\GoodsReceipt\\ReceiptForm.vue"],"sourcesContent":["<template>\r\n  <v-card v-if=\"isOpen\">\r\n    <v-card-title class=\"bg-surface-light pt-4\">\r\n      <span>Entradas</span>\r\n    </v-card-title>\r\n    <v-divider></v-divider>\r\n    <v-card-text>\r\n      <v-form ref=\"form\" v-model=\"valid\">\r\n          <v-row>\r\n            <v-col cols=\"4\" md=\"3\" lg=\"3\" xl=\"3\">\r\n              <v-select v-if=\"localReceipt.pK_RECEIPT == null\" color=\"primary\" variant=\"underlined\" v-model=\"localReceipt.typE_RECEIPT\" :items=\"receiptTypes\"\r\n                label=\"Tipo de Comprobante\" required />\r\n                <v-text-field v-else else color=\"primary\" variant=\"underlined\" v-model=\"localReceipt.typE_RECEIPT\" :items=\"receiptTypes\"\r\n                label=\"Tipo de Comprobante\" readonly />\r\n            </v-col>\r\n            <v-col cols=\"4\" md=\"3\" lg=\"3\" xl=\"3\">\r\n              <v-date-input v-if=\"localReceipt.pK_RECEIPT == null\" locale=\"es\" placeholder=\"dd/mm/yyyy\" v-model=\"localReceipt.datE_PURCHASE\"\r\n                label=\"Fecha de Compra\" variant=\"underlined\" prepend-icon=\"\" :rules=\"[rules.required]\" />\r\n                <v-text-field v-else v-model=\"localReceipt.datE_PURCHASE\"\r\n                label=\"Fecha de Compra\" variant=\"underlined\" readonly />\r\n            </v-col>\r\n            <v-col cols=\"4\" md=\"3\" lg=\"3\" xl=\"3\">\r\n              <v-text-field v-if=\"localReceipt.pK_RECEIPT == null\" color=\"primary\" variant=\"underlined\" v-model=\"localReceipt.receipT_NUMBER\"\r\n              :rules=\"[rules.required]\" counter=\"15\" :maxlength=\"15\" label=\"Número de Comprobante\" required />\r\n              <v-text-field v-else color=\"primary\" variant=\"underlined\" v-model=\"localReceipt.receipT_NUMBER\" label=\"Número de Comprobante\" readonly=\"\" />\r\n            </v-col>\r\n            <v-col cols=\"4\" md=\"3\" lg=\"3\" xl=\"3\">\r\n                <v-autocomplete v-if=\"localReceipt.pK_RECEIPT == null\" color=\"primary\" variant=\"underlined\" :items=\"suppliers\"\r\n                  v-model=\"localReceipt.pK_SUPPLIER\" item-title=\"companY_NAME\" item-value=\"pK_SUPPLIER\" :rules=\"[rules.required]\"\r\n                  no-data-text=\"No hay datos disponibles\" label=\"Proveedor\" required />\r\n                  <v-text-field v-else color=\"primary\" variant=\"underlined\" v-model=\"localReceipt.companY_NAME\" label=\"Proveedor\" readonly=\"\" />\r\n              </v-col>\r\n          </v-row>\r\n      </v-form>\r\n    </v-card-text>\r\n    <v-col xs12 sm12 md12 lg12 xl12>\r\n      <v-card-actions>\r\n        <v-btn v-if=\"localReceipt.pK_RECEIPT == null\" color=\"blue\" dark class=\"mb-2\" elevation=\"4\" @click=\"saveReceipt\" :disabled=\"!valid\">Guardar</v-btn>\r\n        <v-btn color=\"red\" dark class=\"mb-2\" elevation=\"4\" @click=\"close\">Cancelar</v-btn>\r\n      </v-card-actions>\r\n    </v-col>\r\n  </v-card>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n  props: {\r\n  modelValue: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  receipt: {\r\n    type: Object,\r\n    default: () => ({\r\n      pK_RECEIPT: null,\r\n      code: '',\r\n      datE_PURCHASE: null,\r\n      datE_REGISTRATION: '',\r\n      typE_RECEIPT: '',\r\n      receipT_NUMBER: '',\r\n      annotations: '',\r\n      pK_SUPPLIER: null,\r\n      pK_USER: null,\r\n      pK_STORE: null,\r\n    }),\r\n  },\r\n},\r\n  data() {\r\n    return {\r\n      isOpen: this.modelValue,\r\n      valid: false,\r\n      localReceipt: { ...this.receipt },\r\n      rules: {\r\n        required: (value) => !!value || 'Este campo es requerido.',\r\n      },\r\n      receiptTypes: ['FACTURA', 'RECIBO', 'REGULARIZACIÓN'],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('goodsreceipt', ['receipts']),\r\n    ...mapGetters('supplier', ['suppliers']),\r\n  },\r\n  watch: {\r\n    modelValue(newValue) {\r\n      this.isOpen = newValue;\r\n    },\r\n    isOpen(newValue) {\r\n      this.$emit('update:modelValue', newValue);\r\n    },\r\n    receipt: {\r\n      handler(newReceipt) {\r\n        this.localReceipt = { ...newReceipt };\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    close() {\r\n      this.isOpen = false;\r\n      this.$emit('close');\r\n    },\r\n    async saveReceipt() {\r\n      if (this.$refs.form.validate()) {\r\n        try {\r\n          await this.$store.dispatch('goodsreceipt/createReceipt', { ...this.localReceipt });\r\n          this.$emit('saved', { ...this.localReceipt });\r\n          this.close();\r\n        } catch (error) {\r\n          console.error('Error al guardar la entrada:', error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch('supplier/selectSuppliers');\r\n    if (this.localReceipt.pK_RECEIPT == null) {\r\n      this.localReceipt.datE_PURCHASE = null;\r\n    } /* else {\r\n      const parts = this.localReceipt.datE_PURCHASE.split('/');\r\n      if (parts.length === 3) {\r\n        const day = parseInt(parts[0], 10);\r\n        const month = parseInt(parts[1], 10) - 1;\r\n        const year = parseInt(parts[2], 10);\r\n        const date = new Date(year, month, day);\r\n        this.localReceipt.datE_PURCHASE = date;\r\n      } else {\r\n        console.error('Formato de fecha no válido:', this.localReceipt.datE_PURCHASE);\r\n      }\r\n    } */\r\n  }\r\n};\r\n</script>"],"mappings":"AA4CA,SAASA,UAAS,QAAS,MAAM;AACjC,eAAe;EACbC,KAAK,EAAE;IACPC,UAAU,EAAE;MACVC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAEA,CAAA,MAAO;QACdG,UAAU,EAAE,IAAI;QAChBC,IAAI,EAAE,EAAE;QACRC,aAAa,EAAE,IAAI;QACnBC,iBAAiB,EAAE,EAAE;QACrBC,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE,EAAE;QAClBC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE;MACZ,CAAC;IACH;EACF,CAAC;EACCC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI,CAACjB,UAAU;MACvBkB,KAAK,EAAE,KAAK;MACZC,YAAY,EAAE;QAAE,GAAG,IAAI,CAACf;MAAQ,CAAC;MACjCgB,KAAK,EAAE;QACLC,QAAQ,EAAGC,KAAK,IAAK,CAAC,CAACA,KAAI,IAAK;MAClC,CAAC;MACDC,YAAY,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,gBAAgB;IACtD,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAG1B,UAAU,CAAC,cAAc,EAAE,CAAC,UAAU,CAAC,CAAC;IAC3C,GAAGA,UAAU,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC;EACzC,CAAC;EACD2B,KAAK,EAAE;IACLzB,UAAUA,CAAC0B,QAAQ,EAAE;MACnB,IAAI,CAACT,MAAK,GAAIS,QAAQ;IACxB,CAAC;IACDT,MAAMA,CAACS,QAAQ,EAAE;MACf,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC3C,CAAC;IACDtB,OAAO,EAAE;MACPwB,OAAOA,CAACC,UAAU,EAAE;QAClB,IAAI,CAACV,YAAW,GAAI;UAAE,GAAGU;QAAW,CAAC;MACvC,CAAC;MACDC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACf,MAAK,GAAI,KAAK;MACnB,IAAI,CAACU,KAAK,CAAC,OAAO,CAAC;IACrB,CAAC;IACD,MAAMM,WAAWA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;QAC9B,IAAI;UACF,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,4BAA4B,EAAE;YAAE,GAAG,IAAI,CAACnB;UAAa,CAAC,CAAC;UAClF,IAAI,CAACQ,KAAK,CAAC,OAAO,EAAE;YAAE,GAAG,IAAI,CAACR;UAAa,CAAC,CAAC;UAC7C,IAAI,CAACa,KAAK,CAAC,CAAC;QACd,EAAE,OAAOO,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD;MACF;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,MAAM,CAACC,QAAQ,CAAC,0BAA0B,CAAC;IAChD,IAAI,IAAI,CAACnB,YAAY,CAACb,UAAS,IAAK,IAAI,EAAE;MACxC,IAAI,CAACa,YAAY,CAACX,aAAY,GAAI,IAAI;IACxC,EAAE;;;;;;;;;;;;EAYJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}