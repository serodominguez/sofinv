{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_BrandForm = _resolveComponent(\"BrandForm\");\n  const _component_BrandModal = _resolveComponent(\"BrandModal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_data_table, {\n    headers: $options.headers,\n    items: _ctx.brands,\n    search: $data.search,\n    \"items-per-page-text\": $data.pages,\n    \"items-per-page-options\": [5, 10, 20],\n    \"items-per-page\": 5,\n    loading: _ctx.loading,\n    \"loading-text\": \"Cargando... Espere por favor\"\n  }, {\n    item: _withCtx(({\n      item\n    }) => [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(item.branD_NAME), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.status), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n      icon: \"mdi-delete-outline\"\n    }), _createCommentVNode(\" <v-icon class=\\\"me-2\\\" size=\\\"small\\\" @click=\\\"editBrand(item)\\\">mdi-pencil</v-icon> \"), item.status == 'INACTIVO' ? (_openBlock(), _createBlock(_component_v_icon, {\n      key: 0,\n      size: \"small\",\n      onClick: $event => $options.openModal(item, 1)\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"mdi-check\")])),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.status == 'ACTIVO' ? (_openBlock(), _createBlock(_component_v_icon, {\n      key: 1,\n      size: \"small\",\n      onClick: $event => $options.openModal(item, 2)\n    }, {\n      default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"mdi-cancel\")])),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])])]),\n    top: _withCtx(() => [_createVNode(_component_v_toolbar, null, {\n      default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n        default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"Gestión de Marcas\")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_spacer), _createVNode(_component_v_text_field, {\n        \"append-inner-icon\": \"mdi-magnify\",\n        density: \"compact\",\n        label: \"Búsqueda\",\n        variant: \"solo\",\n        \"hide-details\": \"\",\n        \"single-line\": \"\",\n        modelValue: $data.search,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.search = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_card_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          onClick: $options.openForm,\n          color: \"primary\",\n          size: \"large\"\n        }, {\n          default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\" Nuevo \")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    \"no-data\": _withCtx(() => [_createVNode(_component_v_btn, {\n      color: \"primary\",\n      onClick: $options.initialize\n    }, {\n      default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\" Reset \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"headers\", \"items\", \"search\", \"items-per-page-text\", \"loading\"]), _createVNode(_component_BrandForm, {\n    modelValue: $data.form,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form = $event),\n    brand: $data.selectedBrand,\n    onSaved: _ctx.fetchBrands\n  }, null, 8 /* PROPS */, [\"modelValue\", \"brand\", \"onSaved\"]), _createVNode(_component_BrandModal, {\n    modelValue: $data.modal,\n    \"onUpdate:modelValue\": [_cache[2] || (_cache[2] = $event => $data.modal = $event), _cache[3] || (_cache[3] = $event => $data.modal = $event)],\n    brand: $data.selectedBrand,\n    action: $data.action\n  }, null, 8 /* PROPS */, [\"modelValue\", \"brand\", \"action\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_v_data_table","headers","$options","items","_ctx","brands","search","$data","pages","loading","item","_withCtx","_createElementVNode","_toDisplayString","branD_NAME","status","_component_v_btn","icon","_createCommentVNode","_createBlock","_component_v_icon","key","size","onClick","$event","openModal","default","_cache","_createTextVNode","_","top","_component_v_toolbar","_component_v_toolbar_title","_component_v_spacer","_component_v_text_field","density","label","variant","modelValue","_component_v_card_actions","openForm","color","initialize","_component_BrandForm","form","brand","selectedBrand","onSaved","fetchBrands","_component_BrandModal","modal","action"],"sources":["C:\\Users\\Sergio\\Desktop\\SOFINV\\FrontEnd\\src\\components\\Brand\\BrandList.vue"],"sourcesContent":["<template>\r\n  <v-data-table\r\n    :headers=\"headers\"\r\n    :items=\"brands\"\r\n    :search=\"search\"\r\n    :items-per-page-text=\"pages\"\r\n    :items-per-page-options=\"[5, 10, 20]\"\r\n    :items-per-page=\"5\"\r\n    :loading=\"loading\"\r\n    loading-text=\"Cargando... Espere por favor\"\r\n  >\r\n    <template v-slot:item=\"{ item }\">\r\n      <tr>\r\n        <td>{{ item.branD_NAME }}</td>\r\n        <td>{{ item.status }}</td>\r\n        <td>\r\n          <v-btn icon=\"mdi-delete-outline\"></v-btn>\r\n          <!-- <v-icon class=\"me-2\" size=\"small\" @click=\"editBrand(item)\">mdi-pencil</v-icon> -->\r\n          <template v-if=\"item.status == 'INACTIVO'\">\r\n            <v-icon size=\"small\" @click=\"openModal(item, 1)\">mdi-check</v-icon>\r\n          </template>\r\n          <template v-if=\"item.status == 'ACTIVO'\">  \r\n            <v-icon size=\"small\" @click=\"openModal(item, 2)\">mdi-cancel</v-icon>\r\n          </template>\r\n        </td>\r\n      </tr>\r\n    </template>\r\n    <template v-slot:top>\r\n      <v-toolbar>\r\n        <v-toolbar-title>Gestión de Marcas</v-toolbar-title>\r\n        <v-spacer></v-spacer>\r\n        <v-text-field\r\n          append-inner-icon=\"mdi-magnify\"\r\n          density=\"compact\"\r\n          label=\"Búsqueda\"\r\n          variant=\"solo\"\r\n          hide-details\r\n          single-line\r\n          v-model=\"search\"\r\n        ></v-text-field>\r\n        <v-card-actions>\r\n          <v-btn @click=\"openForm\" color=\"primary\" size=\"large\"> Nuevo </v-btn>\r\n        </v-card-actions>\r\n      </v-toolbar>\r\n    </template>\r\n    <template v-slot:no-data>\r\n      <v-btn color=\"primary\" @click=\"initialize\"> Reset </v-btn>\r\n    </template>\r\n  </v-data-table>\r\n  \r\n  <BrandForm v-model=\"form\" :brand=\"selectedBrand\" @saved=\"fetchBrands\" />\r\n  <BrandModal v-model=\"modal\" :brand=\"selectedBrand\" :action=\"action\" @update:modelValue=\"modal = $event\"  />\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport BrandForm from './BrandForm.vue';\r\nimport BrandModal from './BrandModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    BrandForm,\r\n    BrandModal,\r\n  },\r\n  data() {\r\n    return {\r\n      items: [5, 10, 25],\r\n      pages: \"Marcas por Página\",\r\n      search: null,\r\n      form: false,\r\n      modal: false,\r\n      selectedBrand: null,\r\n      action: 0, // 1 for activate, 2 for deactivate\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('brand', ['brands', 'loading']),\r\n    headers() {\r\n      return [\r\n        { title: 'Marca', key: 'branD_NAME' },\r\n        { title: 'Estado', key: 'status' },\r\n        { title: 'Acciones', key: 'actions', sortable: false },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    initialize() {\r\n      // Implementar lógica de inicialización si es necesario\r\n    },\r\n    ...mapActions('brand', ['fetchBrands']),\r\n    openForm() {\r\n      this.selectedBrand = { pK_BRAND: null, branD_NAME: '' };\r\n      this.form = true;\r\n    },\r\n    editBrand(brand) {\r\n      this.selectedBrand = { ...brand };\r\n      this.form = true;\r\n    },\r\n    openModal(brand, action) {\r\n      this.selectedBrand = { ...brand };\r\n      this.action = action;\r\n      this.modal = true;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchBrands();\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}