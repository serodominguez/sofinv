{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport BrandForm from './BrandForm.vue';\nimport BrandAction from './BrandAction.vue';\nexport default {\n  components: {\n    BrandForm,\n    BrandAction\n  },\n  data() {\n    return {\n      items: [5, 10, 25],\n      pages: \"Marcas por Página\",\n      search: null,\n      form: false,\n      modal: false,\n      selectedBrand: null,\n      action: 0 // 1 for activate, 2 for deactivate\n    };\n  },\n  computed: {\n    ...mapGetters('brand', ['brands', 'loading']),\n    headers() {\n      return [{\n        title: 'Marca',\n        key: 'branD_NAME',\n        sortable: false\n      }, {\n        title: 'Agregado',\n        key: 'creatioN_DATE',\n        sortable: false\n      }, {\n        title: 'Estado',\n        key: 'status',\n        sortable: false\n      }, {\n        title: 'Acciones',\n        key: 'actions',\n        sortable: false\n      }];\n    }\n  },\n  methods: {\n    initialize() {\n      this.$store.dispatch('brand/fetchBrands');\n      this.search = null;\n    },\n    ...mapActions('brand', ['fetchBrands']),\n    openForm() {\n      this.selectedBrand = {\n        pK_BRAND: null,\n        branD_NAME: ''\n      };\n      this.form = true;\n    },\n    editBrand(brand) {\n      this.selectedBrand = {\n        ...brand\n      };\n      this.form = true;\n    },\n    openModal(brand, action) {\n      this.selectedBrand = {\n        ...brand\n      };\n      this.action = action;\n      this.modal = true;\n    },\n    searchBrand() {\n      this.$store.dispatch('brand/fetchBrand', this.search);\n    }\n  },\n  mounted() {\n    this.fetchBrands();\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","BrandForm","BrandAction","components","data","items","pages","search","form","modal","selectedBrand","action","computed","headers","title","key","sortable","methods","initialize","$store","dispatch","openForm","pK_BRAND","branD_NAME","editBrand","brand","openModal","searchBrand","mounted","fetchBrands"],"sources":["C:\\Users\\Sergio\\Desktop\\SOFINV\\FrontEnd\\src\\components\\Brand\\BrandList.vue"],"sourcesContent":["<template>\r\n  <v-card elevation=\"2\">\r\n    <v-data-table :headers=\"headers\" :items=\"brands\" :search=\"search\" :items-per-page-text=\"pages\"\r\n      :items-per-page-options=\"[5, 10, 20]\" :items-per-page=\"5\" :loading=\"loading\"\r\n      loading-text=\"Cargando... Espere por favor\" page-text=\"{0}-{1} de {2}\">\r\n      <template v-slot:item=\"{ item }\">\r\n        <tr>\r\n          <td>{{ item.branD_NAME }}</td>\r\n          <td>{{ item.creatioN_DATE }}</td>\r\n          <td>{{ item.status }}</td>\r\n          <td class=\"text-center\">\r\n            <v-btn color=\"blue\" icon=\"edit\" variant=\"text\" @click=\"editBrand(item)\"></v-btn>\r\n            <template v-if=\"item.status == 'INACTIVO'\">\r\n            <v-btn color=\"green\" icon=\"check\" variant=\"text\" @click=\"openModal(item, 1)\"></v-btn>\r\n            </template>\r\n            <template v-if=\"item.status == 'ACTIVO'\">\r\n              <v-btn color=\"red\" icon=\"block\" variant=\"text\" @click=\"openModal(item, 2)\"></v-btn>\r\n            </template>\r\n          </td>\r\n        </tr>\r\n      </template>\r\n      <template v-slot:top>\r\n        <v-toolbar>\r\n          <v-toolbar-title>Gestión de Marcas</v-toolbar-title>\r\n          <v-spacer></v-spacer>\r\n          <v-text-field append-inner-icon=\"search\" density=\"compact\" label=\"Búsqueda\" variant=\"solo\" hide-details\r\n            single-line v-model=\"search\" @click:append-inner=\"searchBrand\" class=\"elevation-1\"></v-text-field>\r\n          <v-card-actions>\r\n            <v-btn @click=\"openForm\" color=\"primary\" elevation=\"4\"> Agregar </v-btn>\r\n          </v-card-actions>\r\n        </v-toolbar>\r\n      </template>\r\n      <template v-slot:no-data>\r\n        <v-btn color=\"primary\" @click=\"initialize\"> Resetear </v-btn>\r\n      </template>\r\n    </v-data-table>\r\n  </v-card>\r\n  <BrandForm v-model=\"form\" :brand=\"selectedBrand\" @saved=\"fetchBrands\" />\r\n  <BrandAction v-model=\"modal\" :brand=\"selectedBrand\" :action=\"action\" @update:modelValue=\"modal = $event\" />\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport BrandForm from './BrandForm.vue';\r\nimport BrandAction from './BrandAction.vue';\r\nexport default {\r\n  components: {\r\n    BrandForm,\r\n    BrandAction,\r\n  },\r\n  data() {\r\n    return {\r\n      items: [5, 10, 25],\r\n      pages: \"Marcas por Página\",\r\n      search: null,\r\n      form: false,\r\n      modal: false,\r\n      selectedBrand: null,\r\n      action: 0, // 1 for activate, 2 for deactivate\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('brand', ['brands', 'loading']),\r\n    headers() {\r\n      return [\r\n        { title: 'Marca', key: 'branD_NAME', sortable: false },\r\n        { title: 'Agregado', key: 'creatioN_DATE', sortable: false },\r\n        { title: 'Estado', key: 'status', sortable: false },\r\n        { title: 'Acciones', key: 'actions', sortable: false },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    initialize() {\r\n      this.$store.dispatch('brand/fetchBrands');\r\n      this.search = null;\r\n    },\r\n    ...mapActions('brand', ['fetchBrands']),\r\n    openForm() {\r\n      this.selectedBrand = {\r\n        pK_BRAND: null,\r\n        branD_NAME: ''\r\n      };\r\n      this.form = true;\r\n    },\r\n    editBrand(brand) {\r\n      this.selectedBrand = { ...brand };\r\n      this.form = true;\r\n    },\r\n    openModal(brand, action) {\r\n      this.selectedBrand = { ...brand };\r\n      this.action = action;\r\n      this.modal = true;\r\n    },\r\n    searchBrand() {\r\n      this.$store.dispatch('brand/fetchBrand', this.search);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchBrands();\r\n  },\r\n};\r\n</script>"],"mappings":"AA0CA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,SAAQ,MAAO,iBAAiB;AACvC,OAAOC,WAAU,MAAO,mBAAmB;AAC3C,eAAe;EACbC,UAAU,EAAE;IACVF,SAAS;IACTC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAClBC,KAAK,EAAE,mBAAmB;MAC1BC,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,KAAK;MACZC,aAAa,EAAE,IAAI;MACnBC,MAAM,EAAE,CAAC,CAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGb,UAAU,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC7Cc,OAAOA,CAAA,EAAG;MACR,OAAO,CACL;QAAEC,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAE,YAAY;QAAEC,QAAQ,EAAE;MAAM,CAAC,EACtD;QAAEF,KAAK,EAAE,UAAU;QAAEC,GAAG,EAAE,eAAe;QAAEC,QAAQ,EAAE;MAAM,CAAC,EAC5D;QAAEF,KAAK,EAAE,QAAQ;QAAEC,GAAG,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAM,CAAC,EACnD;QAAEF,KAAK,EAAE,UAAU;QAAEC,GAAG,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAM,CAAC,CACvD;IACH;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,mBAAmB,CAAC;MACzC,IAAI,CAACb,MAAK,GAAI,IAAI;IACpB,CAAC;IACD,GAAGP,UAAU,CAAC,OAAO,EAAE,CAAC,aAAa,CAAC,CAAC;IACvCqB,QAAQA,CAAA,EAAG;MACT,IAAI,CAACX,aAAY,GAAI;QACnBY,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC;MACD,IAAI,CAACf,IAAG,GAAI,IAAI;IAClB,CAAC;IACDgB,SAASA,CAACC,KAAK,EAAE;MACf,IAAI,CAACf,aAAY,GAAI;QAAE,GAAGe;MAAM,CAAC;MACjC,IAAI,CAACjB,IAAG,GAAI,IAAI;IAClB,CAAC;IACDkB,SAASA,CAACD,KAAK,EAAEd,MAAM,EAAE;MACvB,IAAI,CAACD,aAAY,GAAI;QAAE,GAAGe;MAAM,CAAC;MACjC,IAAI,CAACd,MAAK,GAAIA,MAAM;MACpB,IAAI,CAACF,KAAI,GAAI,IAAI;IACnB,CAAC;IACDkB,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACR,MAAM,CAACC,QAAQ,CAAC,kBAAkB,EAAE,IAAI,CAACb,MAAM,CAAC;IACvD;EACF,CAAC;EACDqB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}