{"ast":null,"code":"import axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport store from \"@/store\";\nconst state = {\n  products: [],\n  selectedProduct: null,\n  loading: false,\n  error: null\n};\nconst mutations = {\n  SET_PRODUCTS(state, products) {\n    state.products = products;\n  },\n  SET_SELECTED_PRODUCT(state, product) {\n    state.selectedProduct = product;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nconst isExpired = token => {\n  if (!token) return false;\n  const decodedToken = jwtDecode(token);\n  const currentTime = Date.now() / 1000;\n  return decodedToken.exp < currentTime;\n};\nconst actions = {\n  async fetchProducts({\n    commit,\n    rootState\n  }) {\n    commit(\"SET_LOADING\", true);\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get(\"api/Products/ReadProducts\", configuration);\n      commit(\"SET_PRODUCTS\", response.data);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    } finally {\n      commit(\"SET_LOADING\", false);\n    }\n  },\n  async fetchProduct({\n    commit,\n    rootState\n  }, text) {\n    commit(\"SET_LOADING\", true);\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      const response = await axios.get(`api/Products/SearchProduct/${text}`, configuration);\n      commit(\"SET_PRODUCTS\", response.data);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.message);\n    } finally {\n      commit(\"SET_LOADING\", false);\n    }\n  },\n  async createProduct({\n    commit,\n    rootState\n  }, product) {\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      await axios.post(\"api/Products/CreateProduct\", product, configuration);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.response);\n      throw error;\n    }\n  },\n  async updateProduct({\n    commit,\n    rootState\n  }, product) {\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      await axios.put(\"api/Products/UpdateProduct\", product, configuration);\n    } catch (error) {\n      commit(\"SET_ERROR\", error.response);\n      throw error;\n    }\n  },\n  async enabledProduct({\n    commit,\n    dispatch,\n    rootState\n  }, id) {\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      await axios.put(`api/Products/EnabledProduct/${id}`, {}, configuration);\n      dispatch(\"fetchProducts\");\n    } catch (error) {\n      commit(\"SET_ERROR\", error.response);\n      throw error;\n    }\n  },\n  async disabledProduct({\n    commit,\n    dispatch,\n    rootState\n  }, id) {\n    try {\n      const token = rootState.token;\n      if (isExpired(token)) {\n        await store.dispatch(\"logoff\");\n        return;\n      }\n      let header = {\n        Authorization: \"Bearer \" + token\n      };\n      let configuration = {\n        headers: header\n      };\n      await axios.put(`api/Products/DisabledProduct/${id}`, {}, configuration);\n      dispatch(\"fetchProducts\");\n    } catch (error) {\n      commit(\"SET_ERROR\", error.response);\n      throw error;\n    }\n  }\n};\nconst getters = {\n  products: state => state.products,\n  selectedProduct: state => state.selectedProduct,\n  loading: state => state.loading,\n  error: state => state.error\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","jwtDecode","store","state","products","selectedProduct","loading","error","mutations","SET_PRODUCTS","SET_SELECTED_PRODUCT","product","SET_LOADING","SET_ERROR","isExpired","token","decodedToken","currentTime","Date","now","exp","actions","fetchProducts","commit","rootState","dispatch","header","Authorization","configuration","headers","response","get","data","message","fetchProduct","text","createProduct","post","updateProduct","put","enabledProduct","id","disabledProduct","getters","namespaced"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/modules/product.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport store from \"@/store\";\r\n\r\nconst state = {\r\n  products: [],\r\n  selectedProduct: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst mutations = {\r\n  SET_PRODUCTS(state, products) {\r\n    state.products = products;\r\n  },\r\n  SET_SELECTED_PRODUCT(state, product) {\r\n    state.selectedProduct = product;\r\n  },\r\n  SET_LOADING(state, loading) {\r\n    state.loading = loading;\r\n  },\r\n  SET_ERROR(state, error) {\r\n    state.error = error;\r\n  },\r\n};\r\n\r\nconst isExpired = (token) => {\r\n  if (!token) return false;\r\n  const decodedToken = jwtDecode(token);\r\n  const currentTime = Date.now() / 1000;\r\n  return decodedToken.exp < currentTime;\r\n};\r\n\r\nconst actions = {\r\n  async fetchProducts({ commit, rootState }) {\r\n    commit(\"SET_LOADING\", true);\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get(\"api/Products/ReadProducts\", configuration);\r\n      commit(\"SET_PRODUCTS\", response.data);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    } finally {\r\n      commit(\"SET_LOADING\", false);\r\n    }\r\n  },\r\n  async fetchProduct({ commit, rootState }, text) {\r\n    commit(\"SET_LOADING\", true);\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      const response = await axios.get(`api/Products/SearchProduct/${text}`, configuration);\r\n      commit(\"SET_PRODUCTS\", response.data);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.message);\r\n    } finally {\r\n      commit(\"SET_LOADING\", false);\r\n    }\r\n  },\r\n  async createProduct({ commit, rootState }, product) {\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      await axios.post(\"api/Products/CreateProduct\", product, configuration);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.response);\r\n      throw error;\r\n    }\r\n  },\r\n  async updateProduct({ commit, rootState }, product) {\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      await axios.put(\"api/Products/UpdateProduct\", product, configuration);\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.response);\r\n      throw error;\r\n    }\r\n  },\r\n  async enabledProduct({ commit, dispatch, rootState }, id) {\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      await axios.put(`api/Products/EnabledProduct/${id}`, {}, configuration);\r\n      dispatch(\"fetchProducts\");\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.response);\r\n      throw error;\r\n    }\r\n  },\r\n  async disabledProduct({ commit, dispatch, rootState }, id) {\r\n    try {\r\n      const token = rootState.token;\r\n      if (isExpired(token)) {\r\n        await store.dispatch(\"logoff\");\r\n        return;\r\n      }\r\n\r\n      let header = { Authorization: \"Bearer \" + token };\r\n      let configuration = { headers: header };\r\n      await axios.put(`api/Products/DisabledProduct/${id}`, {}, configuration);\r\n      dispatch(\"fetchProducts\");\r\n    } catch (error) {\r\n      commit(\"SET_ERROR\", error.response);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  products: (state) => state.products,\r\n  selectedProduct: (state) => state.selectedProduct,\r\n  loading: (state) => state.loading,\r\n  error: (state) => state.error,\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}