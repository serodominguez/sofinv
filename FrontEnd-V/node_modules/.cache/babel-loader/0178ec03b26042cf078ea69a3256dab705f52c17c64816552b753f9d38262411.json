{"ast":null,"code":"import axios from 'axios';\nconst state = {\n  stores: [],\n  selectedStore: null,\n  loading: false,\n  error: null\n};\nconst mutations = {\n  SET_STORES(state, stores) {\n    state.stores = stores;\n  },\n  SET_SELECTED_STORE(state, store) {\n    state.selectedStore = store;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nconst actions = {\n  async fetchStores({\n    commit\n  }) {\n    commit('SET_LOADING', true);\n    try {\n      const response = await axios.get('api/Stores/ReadStores');\n      commit('SET_STORES', response.data);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  async fetchStore({\n    commit\n  }, text) {\n    commit('SET_LOADING', true);\n    try {\n      const response = await axios.get(`api/Stores/ReadStore/${text}`);\n      commit('SET_STORES', response.data);\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  async createStore({\n    dispatch\n  }, store) {\n    await axios.post('api/Stores/CreateStore', store);\n    dispatch('fetchStores');\n  },\n  async updateStore({\n    dispatch\n  }, store) {\n    await axios.put('api/Stores/UpdateStore', store);\n    dispatch('fetchStores');\n  },\n  async enabledStore({\n    dispatch\n  }, id) {\n    await axios.put(`api/Stores/EnabledStore/${id}`);\n    dispatch('fetchStores');\n  },\n  async disabledStore({\n    dispatch\n  }, id) {\n    await axios.put(`api/Stores/DisabledStore/${id}`);\n    dispatch('fetchStores');\n  }\n};\nconst getters = {\n  stores: state => state.stores,\n  selectedStore: state => state.selectedStore,\n  loading: state => state.loading,\n  error: state => state.error\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["axios","state","stores","selectedStore","loading","error","mutations","SET_STORES","SET_SELECTED_STORE","store","SET_LOADING","SET_ERROR","actions","fetchStores","commit","response","get","data","message","fetchStore","text","createStore","dispatch","post","updateStore","put","enabledStore","id","disabledStore","getters","namespaced"],"sources":["C:/Users/Sergio/Desktop/SOFINV/FrontEnd/src/store/modules/store.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst state = {\r\n  stores: [],\r\n  selectedStore: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst mutations = {\r\n  SET_STORES(state, stores) {\r\n    state.stores = stores;\r\n  },\r\n  SET_SELECTED_STORE(state, store) {\r\n    state.selectedStore = store;\r\n  },\r\n  SET_LOADING(state, loading) {\r\n    state.loading = loading;\r\n  },\r\n  SET_ERROR(state, error) {\r\n    state.error = error;\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  async fetchStores({ commit }) {\r\n    commit('SET_LOADING', true);\r\n    try {\r\n      const response = await axios.get('api/Stores/ReadStores');\r\n      commit('SET_STORES', response.data);\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message);\r\n    } finally {\r\n      commit('SET_LOADING', false);\r\n    }\r\n  },\r\n  async fetchStore({ commit }, text) {\r\n    commit('SET_LOADING', true);\r\n    try {\r\n      const response = await axios.get(`api/Stores/ReadStore/${text}`);\r\n      commit('SET_STORES', response.data);\r\n    } catch (error) {\r\n      commit('SET_ERROR', error.message);\r\n    } finally {\r\n      commit('SET_LOADING', false);\r\n    }\r\n  },\r\n  async createStore({ dispatch }, store) {\r\n    await axios.post('api/Stores/CreateStore', store);\r\n    dispatch('fetchStores');\r\n  },\r\n  async updateStore({ dispatch }, store) {\r\n    await axios.put('api/Stores/UpdateStore', store);\r\n    dispatch('fetchStores');\r\n  },\r\n  async enabledStore({ dispatch }, id) {\r\n    await axios.put(`api/Stores/EnabledStore/${id}`);\r\n    dispatch('fetchStores');\r\n  },\r\n  async disabledStore({ dispatch }, id) {\r\n    await axios.put(`api/Stores/DisabledStore/${id}`);\r\n    dispatch('fetchStores');\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  stores: (state) => state.stores,\r\n  selectedStore: (state) => state.selectedStore,\r\n  loading: (state) => state.loading,\r\n  error: (state) => state.error,\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}