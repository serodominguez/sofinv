[
  {
    "ContainingType": "BackEnd.Api.Controllers.BrandsController",
    "Method": "CreateBrand",
    "RelativePath": "api/Brands/CreateBrand",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "BackEnd.Application.Dtos.BrandsDtos.BrandCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.BrandsController",
    "Method": "DisabledBrand",
    "RelativePath": "api/Brands/DisabledBrand/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.BrandsController",
    "Method": "EnabledBrand",
    "RelativePath": "api/Brands/EnabledBrand/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.BrandsController",
    "Method": "ReadBrand",
    "RelativePath": "api/Brands/ReadBrand/{texto}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "texto",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Application.Dtos.BrandsDtos.BrandReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.BrandsController",
    "Method": "ReadBrands",
    "RelativePath": "api/Brands/ReadBrands",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.BrandsController",
    "Method": "SelectBrands",
    "RelativePath": "api/Brands/SelectBrands",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.BrandsController",
    "Method": "UpdateBrand",
    "RelativePath": "api/Brands/UpdateBrand",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateDto",
        "Type": "BackEnd.Application.Dtos.BrandsDtos.BrandUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.CategoriesController",
    "Method": "CreateCategory",
    "RelativePath": "api/Categories/CreateCategory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "BackEnd.Application.Dtos.CategoriesDtos.CategoryCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.CategoriesController",
    "Method": "DisabledCategory",
    "RelativePath": "api/Categories/DisabledCategory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.CategoriesController",
    "Method": "EnabledCategory",
    "RelativePath": "api/Categories/EnabledCategory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.CategoriesController",
    "Method": "ReadCategories",
    "RelativePath": "api/Categories/ReadCategories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.CategoriesController",
    "Method": "ReadCategory",
    "RelativePath": "api/Categories/ReadCategory/{texto}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "texto",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Application.Dtos.CategoriesDtos.CategoryReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.CategoriesController",
    "Method": "SelectCategories",
    "RelativePath": "api/Categories/SelectCategories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.CategoriesController",
    "Method": "UpdateCategory",
    "RelativePath": "api/Categories/UpdateCategory",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateDto",
        "Type": "BackEnd.Application.Dtos.CategoriesDtos.CategoryUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.LoginController",
    "Method": "Login",
    "RelativePath": "api/Login/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "BackEnd.Application.Dtos.UsersDtos.UserLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.ProductsController",
    "Method": "CreateProduct",
    "RelativePath": "api/Products/CreateProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "BackEnd.Application.Dtos.ProductsDtos.ProductCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.ProductsController",
    "Method": "DisabledProduct",
    "RelativePath": "api/Products/DisabledProduct/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.ProductsController",
    "Method": "EnabledProduct",
    "RelativePath": "api/Products/EnabledProduct/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.ProductsController",
    "Method": "ReadProduct",
    "RelativePath": "api/Products/ReadProduct/{texto}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "texto",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Application.Dtos.ProductsDtos.ProductReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.ProductsController",
    "Method": "ReadProducts",
    "RelativePath": "api/Products/ReadProducts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.ProductsController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Products/UpdateProduct",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateDto",
        "Type": "BackEnd.Application.Dtos.ProductsDtos.ProductUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.RolesController",
    "Method": "ReadRoles",
    "RelativePath": "api/Roles/ReadRoles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.RolesController",
    "Method": "SelectRoles",
    "RelativePath": "api/Roles/SelectRoles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.StoresController",
    "Method": "CreateStore",
    "RelativePath": "api/Stores/CreateStore",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "BackEnd.Application.Dtos.StoresDtos.StoreCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.StoresController",
    "Method": "DisabledStore",
    "RelativePath": "api/Stores/DisabledStore/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.StoresController",
    "Method": "EnabledStore",
    "RelativePath": "api/Stores/EnabledStore/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.StoresController",
    "Method": "ReadStore",
    "RelativePath": "api/Stores/ReadStore/{texto}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "texto",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Application.Dtos.StoresDtos.StoreReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.StoresController",
    "Method": "ReadStores",
    "RelativePath": "api/Stores/ReadStores",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.StoresController",
    "Method": "SelectStores",
    "RelativePath": "api/Stores/SelectStores",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.StoresController",
    "Method": "UpdateStore",
    "RelativePath": "api/Stores/UpdateStore",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateDto",
        "Type": "BackEnd.Application.Dtos.StoresDtos.StoreUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.SuppliersController",
    "Method": "CreateSupplier",
    "RelativePath": "api/Suppliers/CreateSupplier",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "BackEnd.Application.Dtos.SuppliersDtos.SupplierCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.SuppliersController",
    "Method": "DisabledSupplier",
    "RelativePath": "api/Suppliers/DisabledSupplier/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.SuppliersController",
    "Method": "EnabledSupplier",
    "RelativePath": "api/Suppliers/EnabledSupplier/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.SuppliersController",
    "Method": "ReadSupplier",
    "RelativePath": "api/Suppliers/ReadSupplier/{texto}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "texto",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Application.Dtos.SuppliersDtos.SupplierReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.SuppliersController",
    "Method": "ReadSuppliers",
    "RelativePath": "api/Suppliers/ReadSuppliers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.SuppliersController",
    "Method": "SelectSuppliers",
    "RelativePath": "api/Suppliers/SelectSuppliers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.SuppliersController",
    "Method": "UpdateSupplier",
    "RelativePath": "api/Suppliers/UpdateSupplier",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateDto",
        "Type": "BackEnd.Application.Dtos.SuppliersDtos.SupplierUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.UsersController",
    "Method": "CreateUser",
    "RelativePath": "api/Users/CreateUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "BackEnd.Application.Dtos.UsersDtos.UserCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.UsersController",
    "Method": "DisabledUser",
    "RelativePath": "api/Users/DisabledUser/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.UsersController",
    "Method": "EnabledUser",
    "RelativePath": "api/Users/EnabledUser/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.UsersController",
    "Method": "ReadUsers",
    "RelativePath": "api/Users/ReadUsers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Api.Controllers.UsersController",
    "Method": "UpdateUser",
    "RelativePath": "api/Users/UpdateUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateDto",
        "Type": "BackEnd.Application.Dtos.UsersDtos.UserUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]