{
  "openapi": "3.0.1",
  "info": {
    "title": "BackEnd.Api",
    "version": "1.0"
  },
  "paths": {
    "/api/Brands/CreateBrand": {
      "post": {
        "tags": [
          "Brands"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrandCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Brands/ReadBrands": {
      "get": {
        "tags": [
          "Brands"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Brands/ReadBrand/{texto}": {
      "get": {
        "tags": [
          "Brands"
        ],
        "parameters": [
          {
            "name": "texto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrandReadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandReadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandReadDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Brands/SelectBrands": {
      "get": {
        "tags": [
          "Brands"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Brands/UpdateBrand": {
      "put": {
        "tags": [
          "Brands"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrandUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Brands/EnabledBrand/{id}": {
      "put": {
        "tags": [
          "Brands"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Brands/DisabledBrand/{id}": {
      "put": {
        "tags": [
          "Brands"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Categories/CreateCategory": {
      "post": {
        "tags": [
          "Categories"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Categories/ReadCategories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Categories/ReadCategory/{texto}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "texto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryReadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryReadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryReadDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Categories/SelectCategories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Categories/UpdateCategory": {
      "put": {
        "tags": [
          "Categories"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Categories/EnabledCategory/{id}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Categories/DisabledCategory/{id}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Login/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/CreateProduct": {
      "post": {
        "tags": [
          "Products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/ReadProducts": {
      "get": {
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/ReadProduct/{texto}": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "texto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReadDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/UpdateProduct": {
      "put": {
        "tags": [
          "Products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/EnabledProduct/{id}": {
      "put": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/DisabledProduct/{id}": {
      "put": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Roles/ReadRoles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Roles/SelectRoles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Stores/CreateStore": {
      "post": {
        "tags": [
          "Stores"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Stores/ReadStores": {
      "get": {
        "tags": [
          "Stores"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Stores/ReadStore/{texto}": {
      "get": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "texto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StoreReadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreReadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreReadDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Stores/SelectStores": {
      "get": {
        "tags": [
          "Stores"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Stores/UpdateStore": {
      "put": {
        "tags": [
          "Stores"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Stores/EnabledStore/{id}": {
      "put": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Stores/DisabledStore/{id}": {
      "put": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Suppliers/CreateSupplier": {
      "post": {
        "tags": [
          "Suppliers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Suppliers/ReadSuppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Suppliers/ReadSupplier/{texto}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "name": "texto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierReadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierReadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierReadDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Suppliers/SelectSuppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Suppliers/UpdateSupplier": {
      "put": {
        "tags": [
          "Suppliers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Suppliers/EnabledSupplier/{id}": {
      "put": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Suppliers/DisabledSupplier/{id}": {
      "put": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/CreateUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/ReadUsers": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/UpdateUser": {
      "put": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/EnabledUser/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/DisabledUser/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BrandCreateDto": {
        "required": [
          "branD_NAME"
        ],
        "type": "object",
        "properties": {
          "branD_NAME": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BrandReadDto": {
        "type": "object",
        "properties": {
          "pK_BRAND": {
            "type": "integer",
            "format": "int32"
          },
          "branD_NAME": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "creatioN_DATE": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrandUpdateDto": {
        "required": [
          "branD_NAME",
          "pK_BRAND"
        ],
        "type": "object",
        "properties": {
          "pK_BRAND": {
            "type": "integer",
            "format": "int32"
          },
          "branD_NAME": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryCreateDto": {
        "required": [
          "categorY_NAME"
        ],
        "type": "object",
        "properties": {
          "categorY_NAME": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CategoryReadDto": {
        "type": "object",
        "properties": {
          "pK_CATEGORY": {
            "type": "integer",
            "format": "int32"
          },
          "categorY_NAME": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "creatioN_DATE": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryUpdateDto": {
        "required": [
          "categorY_NAME",
          "pK_CATEGORY"
        ],
        "type": "object",
        "properties": {
          "pK_CATEGORY": {
            "type": "integer",
            "format": "int32"
          },
          "categorY_NAME": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductCreateDto": {
        "required": [
          "description",
          "measurement"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "measurement": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "material": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "pK_BRAND": {
            "type": "integer",
            "format": "int32"
          },
          "pK_CATEGORY": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductReadDto": {
        "type": "object",
        "properties": {
          "pK_PRODUCT": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "material": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "measurement": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "pK_BRAND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branD_NAME": {
            "type": "string",
            "nullable": true
          },
          "pK_CATEGORY": {
            "type": "integer",
            "format": "int32"
          },
          "categorY_NAME": {
            "type": "string",
            "nullable": true
          },
          "creatioN_DATE": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateDto": {
        "required": [
          "description",
          "measurement",
          "pK_PRODUCT"
        ],
        "type": "object",
        "properties": {
          "pK_PRODUCT": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "measurement": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "material": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "pK_BRAND": {
            "type": "integer",
            "format": "int32"
          },
          "pK_CATEGORY": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StoreCreateDto": {
        "required": [
          "address",
          "city",
          "manager",
          "storE_NAME"
        ],
        "type": "object",
        "properties": {
          "storE_NAME": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "manager": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "city": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreReadDto": {
        "type": "object",
        "properties": {
          "pK_STORE": {
            "type": "integer",
            "format": "int32"
          },
          "storE_NAME": {
            "type": "string",
            "nullable": true
          },
          "manager": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "integer",
            "format": "int32"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "creatioN_DATE": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreUpdateDto": {
        "required": [
          "address",
          "city",
          "manager",
          "pK_STORE",
          "storE_NAME"
        ],
        "type": "object",
        "properties": {
          "pK_STORE": {
            "type": "integer",
            "format": "int32"
          },
          "storE_NAME": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "manager": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "city": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierCreateDto": {
        "required": [
          "companY_NAME",
          "contact"
        ],
        "type": "object",
        "properties": {
          "companY_NAME": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contact": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierReadDto": {
        "type": "object",
        "properties": {
          "pK_SUPPLIER": {
            "type": "integer",
            "format": "int32"
          },
          "companY_NAME": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "creatioN_DATE": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierUpdateDto": {
        "required": [
          "companY_NAME",
          "contact",
          "pK_SUPPLIER"
        ],
        "type": "object",
        "properties": {
          "pK_SUPPLIER": {
            "type": "integer",
            "format": "int32"
          },
          "companY_NAME": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "contact": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCreateDto": {
        "required": [
          "names",
          "password",
          "surnames",
          "useR_NAME"
        ],
        "type": "object",
        "properties": {
          "useR_NAME": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "names": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "surnames": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "pK_ROLE": {
            "type": "integer",
            "format": "int32"
          },
          "pK_STORE": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserLoginDto": {
        "required": [
          "password",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserUpdateDto": {
        "required": [
          "names",
          "pK_USER",
          "surnames",
          "useR_NAME"
        ],
        "type": "object",
        "properties": {
          "pK_USER": {
            "type": "integer",
            "format": "int32"
          },
          "useR_NAME": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "names": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "surnames": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "identification": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "pK_ROLE": {
            "type": "integer",
            "format": "int32"
          },
          "pK_STORE": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "updatepassword": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}